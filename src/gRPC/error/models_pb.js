/* eslint-disable */
// source: error/models.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.error.api.v1.Error', null, global);
goog.exportSymbol('proto.error.api.v1.Error.CauseCase', null, global);
goog.exportSymbol('proto.error.api.v1.ErrorType', null, global);
goog.exportSymbol('proto.error.api.v1.ValidationError', null, global);
goog.exportSymbol('proto.error.api.v1.ValidationErrors', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.error.api.v1.Error = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.error.api.v1.Error.oneofGroups_);
};
goog.inherits(proto.error.api.v1.Error, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.error.api.v1.Error.displayName = 'proto.error.api.v1.Error';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.error.api.v1.ValidationError = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.error.api.v1.ValidationError, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.error.api.v1.ValidationError.displayName = 'proto.error.api.v1.ValidationError';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.error.api.v1.ValidationErrors = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.error.api.v1.ValidationErrors.repeatedFields_, null);
};
goog.inherits(proto.error.api.v1.ValidationErrors, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.error.api.v1.ValidationErrors.displayName = 'proto.error.api.v1.ValidationErrors';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.error.api.v1.Error.oneofGroups_ = [[3,4]];

/**
 * @enum {number}
 */
proto.error.api.v1.Error.CauseCase = {
  CAUSE_NOT_SET: 0,
  MESSAGE: 3,
  VALIDATIONERRORS: 4
};

/**
 * @return {proto.error.api.v1.Error.CauseCase}
 */
proto.error.api.v1.Error.prototype.getCauseCase = function() {
  return /** @type {proto.error.api.v1.Error.CauseCase} */(jspb.Message.computeOneofCase(this, proto.error.api.v1.Error.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.error.api.v1.Error.prototype.toObject = function(opt_includeInstance) {
  return proto.error.api.v1.Error.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.error.api.v1.Error} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.error.api.v1.Error.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    code: jspb.Message.getFieldWithDefault(msg, 2, 0),
    message: jspb.Message.getFieldWithDefault(msg, 3, ""),
    validationerrors: (f = msg.getValidationerrors()) && proto.error.api.v1.ValidationErrors.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.error.api.v1.Error}
 */
proto.error.api.v1.Error.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.error.api.v1.Error;
  return proto.error.api.v1.Error.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.error.api.v1.Error} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.error.api.v1.Error}
 */
proto.error.api.v1.Error.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.error.api.v1.ErrorType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCode(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 4:
      var value = new proto.error.api.v1.ValidationErrors;
      reader.readMessage(value,proto.error.api.v1.ValidationErrors.deserializeBinaryFromReader);
      msg.setValidationerrors(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.error.api.v1.Error.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.error.api.v1.Error.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.error.api.v1.Error} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.error.api.v1.Error.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getCode();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getValidationerrors();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.error.api.v1.ValidationErrors.serializeBinaryToWriter
    );
  }
};


/**
 * optional ErrorType type = 1;
 * @return {!proto.error.api.v1.ErrorType}
 */
proto.error.api.v1.Error.prototype.getType = function() {
  return /** @type {!proto.error.api.v1.ErrorType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.error.api.v1.ErrorType} value
 * @return {!proto.error.api.v1.Error} returns this
 */
proto.error.api.v1.Error.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional int64 code = 2;
 * @return {number}
 */
proto.error.api.v1.Error.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.error.api.v1.Error} returns this
 */
proto.error.api.v1.Error.prototype.setCode = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string message = 3;
 * @return {string}
 */
proto.error.api.v1.Error.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.error.api.v1.Error} returns this
 */
proto.error.api.v1.Error.prototype.setMessage = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.error.api.v1.Error.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.error.api.v1.Error} returns this
 */
proto.error.api.v1.Error.prototype.clearMessage = function() {
  return jspb.Message.setOneofField(this, 3, proto.error.api.v1.Error.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.error.api.v1.Error.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ValidationErrors validationErrors = 4;
 * @return {?proto.error.api.v1.ValidationErrors}
 */
proto.error.api.v1.Error.prototype.getValidationerrors = function() {
  return /** @type{?proto.error.api.v1.ValidationErrors} */ (
    jspb.Message.getWrapperField(this, proto.error.api.v1.ValidationErrors, 4));
};


/**
 * @param {?proto.error.api.v1.ValidationErrors|undefined} value
 * @return {!proto.error.api.v1.Error} returns this
*/
proto.error.api.v1.Error.prototype.setValidationerrors = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.error.api.v1.Error.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.error.api.v1.Error} returns this
 */
proto.error.api.v1.Error.prototype.clearValidationerrors = function() {
  return this.setValidationerrors(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.error.api.v1.Error.prototype.hasValidationerrors = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.error.api.v1.ValidationError.prototype.toObject = function(opt_includeInstance) {
  return proto.error.api.v1.ValidationError.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.error.api.v1.ValidationError} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.error.api.v1.ValidationError.toObject = function(includeInstance, msg) {
  var f, obj = {
    fieldname: jspb.Message.getFieldWithDefault(msg, 1, ""),
    fieldtype: jspb.Message.getFieldWithDefault(msg, 2, ""),
    fieldvalue: jspb.Message.getFieldWithDefault(msg, 3, ""),
    message: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.error.api.v1.ValidationError}
 */
proto.error.api.v1.ValidationError.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.error.api.v1.ValidationError;
  return proto.error.api.v1.ValidationError.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.error.api.v1.ValidationError} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.error.api.v1.ValidationError}
 */
proto.error.api.v1.ValidationError.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFieldname(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFieldtype(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFieldvalue(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.error.api.v1.ValidationError.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.error.api.v1.ValidationError.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.error.api.v1.ValidationError} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.error.api.v1.ValidationError.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFieldname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFieldtype();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFieldvalue();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string fieldName = 1;
 * @return {string}
 */
proto.error.api.v1.ValidationError.prototype.getFieldname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.error.api.v1.ValidationError} returns this
 */
proto.error.api.v1.ValidationError.prototype.setFieldname = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string fieldType = 2;
 * @return {string}
 */
proto.error.api.v1.ValidationError.prototype.getFieldtype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.error.api.v1.ValidationError} returns this
 */
proto.error.api.v1.ValidationError.prototype.setFieldtype = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string fieldValue = 3;
 * @return {string}
 */
proto.error.api.v1.ValidationError.prototype.getFieldvalue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.error.api.v1.ValidationError} returns this
 */
proto.error.api.v1.ValidationError.prototype.setFieldvalue = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string message = 4;
 * @return {string}
 */
proto.error.api.v1.ValidationError.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.error.api.v1.ValidationError} returns this
 */
proto.error.api.v1.ValidationError.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.error.api.v1.ValidationErrors.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.error.api.v1.ValidationErrors.prototype.toObject = function(opt_includeInstance) {
  return proto.error.api.v1.ValidationErrors.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.error.api.v1.ValidationErrors} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.error.api.v1.ValidationErrors.toObject = function(includeInstance, msg) {
  var f, obj = {
    errorsList: jspb.Message.toObjectList(msg.getErrorsList(),
    proto.error.api.v1.ValidationError.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.error.api.v1.ValidationErrors}
 */
proto.error.api.v1.ValidationErrors.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.error.api.v1.ValidationErrors;
  return proto.error.api.v1.ValidationErrors.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.error.api.v1.ValidationErrors} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.error.api.v1.ValidationErrors}
 */
proto.error.api.v1.ValidationErrors.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.error.api.v1.ValidationError;
      reader.readMessage(value,proto.error.api.v1.ValidationError.deserializeBinaryFromReader);
      msg.addErrors(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.error.api.v1.ValidationErrors.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.error.api.v1.ValidationErrors.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.error.api.v1.ValidationErrors} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.error.api.v1.ValidationErrors.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErrorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.error.api.v1.ValidationError.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ValidationError errors = 1;
 * @return {!Array<!proto.error.api.v1.ValidationError>}
 */
proto.error.api.v1.ValidationErrors.prototype.getErrorsList = function() {
  return /** @type{!Array<!proto.error.api.v1.ValidationError>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.error.api.v1.ValidationError, 1));
};


/**
 * @param {!Array<!proto.error.api.v1.ValidationError>} value
 * @return {!proto.error.api.v1.ValidationErrors} returns this
*/
proto.error.api.v1.ValidationErrors.prototype.setErrorsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.error.api.v1.ValidationError=} opt_value
 * @param {number=} opt_index
 * @return {!proto.error.api.v1.ValidationError}
 */
proto.error.api.v1.ValidationErrors.prototype.addErrors = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.error.api.v1.ValidationError, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.error.api.v1.ValidationErrors} returns this
 */
proto.error.api.v1.ValidationErrors.prototype.clearErrorsList = function() {
  return this.setErrorsList([]);
};


/**
 * @enum {number}
 */
proto.error.api.v1.ErrorType = {
  UNKNOWN: 0,
  GENERIC: 100,
  TIMEOUT: 101,
  VALIDATION: 102,
  BAD_REQUEST: 103,
  ALREADY_EXISTS: 104,
  CANNOT_BE_FOUND: 105,
  FORBIDDEN: 106,
  AUTHORIZATION: 107,
  AUTHENTICATION: 108,
  REAUTHENTICATION: 109,
  UNSUPPORTED: 110,
  INTERNAL: 500,
  CONFLICT: 501,
  UNAVAILABLE: 502,
  MAINTENANCE: 503
};

goog.object.extend(exports, proto.error.api.v1);

/* eslint-disable */
// source: mcu/services.private.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var mcu_enums_pb = require('../mcu/enums_pb.js');
goog.object.extend(proto, mcu_enums_pb);
var mcu_models_pb = require('../mcu/models_pb.js');
goog.object.extend(proto, mcu_models_pb);
var mcu_packets_pb = require('../mcu/packets_pb.js');
goog.object.extend(proto, mcu_packets_pb);
goog.exportSymbol('proto.mcu.api.v1.AddRoomRequest', null, global);
goog.exportSymbol('proto.mcu.api.v1.AddRoomResponse', null, global);
goog.exportSymbol('proto.mcu.api.v1.AddRoomsRequest', null, global);
goog.exportSymbol('proto.mcu.api.v1.AddRoomsResponse', null, global);
goog.exportSymbol('proto.mcu.api.v1.GetRoomRequest', null, global);
goog.exportSymbol('proto.mcu.api.v1.GetRoomResponse', null, global);
goog.exportSymbol('proto.mcu.api.v1.GetStreamerRequest', null, global);
goog.exportSymbol('proto.mcu.api.v1.GetStreamerResponse', null, global);
goog.exportSymbol('proto.mcu.api.v1.GetStreamersRequest', null, global);
goog.exportSymbol('proto.mcu.api.v1.GetStreamersResponse', null, global);
goog.exportSymbol('proto.mcu.api.v1.ListRoomsRequest', null, global);
goog.exportSymbol('proto.mcu.api.v1.ListRoomsResponse', null, global);
goog.exportSymbol('proto.mcu.api.v1.OutputStreamRequest', null, global);
goog.exportSymbol('proto.mcu.api.v1.RemoveRoomRequest', null, global);
goog.exportSymbol('proto.mcu.api.v1.RemoveRoomResponse', null, global);
goog.exportSymbol('proto.mcu.api.v1.RemoveRoomsRequest', null, global);
goog.exportSymbol('proto.mcu.api.v1.RemoveRoomsResponse', null, global);
goog.exportSymbol('proto.mcu.api.v1.SetStreamerRequest', null, global);
goog.exportSymbol('proto.mcu.api.v1.SetStreamerResponse', null, global);
goog.exportSymbol('proto.mcu.api.v1.StartRoomEventsRequest', null, global);
goog.exportSymbol('proto.mcu.api.v1.StartRoomEventsResponse', null, global);
goog.exportSymbol('proto.mcu.api.v1.StartStreamingRequest', null, global);
goog.exportSymbol('proto.mcu.api.v1.StartStreamingResponse', null, global);
goog.exportSymbol('proto.mcu.api.v1.StopRoomEventsRequest', null, global);
goog.exportSymbol('proto.mcu.api.v1.StopRoomEventsResponse', null, global);
goog.exportSymbol('proto.mcu.api.v1.StopStreamingRequest', null, global);
goog.exportSymbol('proto.mcu.api.v1.StopStreamingResponse', null, global);
goog.exportSymbol('proto.mcu.api.v1.StringValue', null, global);
goog.exportSymbol('proto.mcu.api.v1.UpdateBroadcastLayout', null, global);
goog.exportSymbol('proto.mcu.api.v1.UpdateBroadcastPerformers', null, global);
goog.exportSymbol('proto.mcu.api.v1.UpdateBroadcastRequest', null, global);
goog.exportSymbol('proto.mcu.api.v1.UpdateBroadcastResponse', null, global);
goog.exportSymbol('proto.mcu.api.v1.UpdateBroadcastSwapPerformers', null, global);
goog.exportSymbol('proto.mcu.api.v1.UpdateMixerType', null, global);
goog.exportSymbol('proto.mcu.api.v1.UpdateRoom', null, global);
goog.exportSymbol('proto.mcu.api.v1.UpdateRoomBroadcast', null, global);
goog.exportSymbol('proto.mcu.api.v1.UpdateRoomGridOrder', null, global);
goog.exportSymbol('proto.mcu.api.v1.UpdateRoomsRequest', null, global);
goog.exportSymbol('proto.mcu.api.v1.UpdateRoomsResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcu.api.v1.UpdateRoomsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mcu.api.v1.UpdateRoomsRequest.repeatedFields_, null);
};
goog.inherits(proto.mcu.api.v1.UpdateRoomsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcu.api.v1.UpdateRoomsRequest.displayName = 'proto.mcu.api.v1.UpdateRoomsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcu.api.v1.UpdateRoomsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mcu.api.v1.UpdateRoomsResponse.repeatedFields_, null);
};
goog.inherits(proto.mcu.api.v1.UpdateRoomsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcu.api.v1.UpdateRoomsResponse.displayName = 'proto.mcu.api.v1.UpdateRoomsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcu.api.v1.UpdateRoom = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mcu.api.v1.UpdateRoom, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcu.api.v1.UpdateRoom.displayName = 'proto.mcu.api.v1.UpdateRoom';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcu.api.v1.StringValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mcu.api.v1.StringValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcu.api.v1.StringValue.displayName = 'proto.mcu.api.v1.StringValue';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcu.api.v1.UpdateRoomBroadcast = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mcu.api.v1.UpdateRoomBroadcast, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcu.api.v1.UpdateRoomBroadcast.displayName = 'proto.mcu.api.v1.UpdateRoomBroadcast';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcu.api.v1.GetRoomRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mcu.api.v1.GetRoomRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcu.api.v1.GetRoomRequest.displayName = 'proto.mcu.api.v1.GetRoomRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcu.api.v1.GetRoomResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mcu.api.v1.GetRoomResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcu.api.v1.GetRoomResponse.displayName = 'proto.mcu.api.v1.GetRoomResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcu.api.v1.ListRoomsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mcu.api.v1.ListRoomsRequest.repeatedFields_, null);
};
goog.inherits(proto.mcu.api.v1.ListRoomsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcu.api.v1.ListRoomsRequest.displayName = 'proto.mcu.api.v1.ListRoomsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcu.api.v1.ListRoomsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mcu.api.v1.ListRoomsResponse.repeatedFields_, null);
};
goog.inherits(proto.mcu.api.v1.ListRoomsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcu.api.v1.ListRoomsResponse.displayName = 'proto.mcu.api.v1.ListRoomsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcu.api.v1.StopRoomEventsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mcu.api.v1.StopRoomEventsRequest.repeatedFields_, null);
};
goog.inherits(proto.mcu.api.v1.StopRoomEventsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcu.api.v1.StopRoomEventsRequest.displayName = 'proto.mcu.api.v1.StopRoomEventsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcu.api.v1.StopRoomEventsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mcu.api.v1.StopRoomEventsResponse.repeatedFields_, null);
};
goog.inherits(proto.mcu.api.v1.StopRoomEventsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcu.api.v1.StopRoomEventsResponse.displayName = 'proto.mcu.api.v1.StopRoomEventsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcu.api.v1.StartRoomEventsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mcu.api.v1.StartRoomEventsRequest.repeatedFields_, null);
};
goog.inherits(proto.mcu.api.v1.StartRoomEventsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcu.api.v1.StartRoomEventsRequest.displayName = 'proto.mcu.api.v1.StartRoomEventsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcu.api.v1.StartRoomEventsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mcu.api.v1.StartRoomEventsResponse.repeatedFields_, null);
};
goog.inherits(proto.mcu.api.v1.StartRoomEventsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcu.api.v1.StartRoomEventsResponse.displayName = 'proto.mcu.api.v1.StartRoomEventsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcu.api.v1.AddRoomsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mcu.api.v1.AddRoomsRequest.repeatedFields_, null);
};
goog.inherits(proto.mcu.api.v1.AddRoomsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcu.api.v1.AddRoomsRequest.displayName = 'proto.mcu.api.v1.AddRoomsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcu.api.v1.AddRoomsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mcu.api.v1.AddRoomsResponse.repeatedFields_, null);
};
goog.inherits(proto.mcu.api.v1.AddRoomsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcu.api.v1.AddRoomsResponse.displayName = 'proto.mcu.api.v1.AddRoomsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcu.api.v1.RemoveRoomsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mcu.api.v1.RemoveRoomsRequest.repeatedFields_, null);
};
goog.inherits(proto.mcu.api.v1.RemoveRoomsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcu.api.v1.RemoveRoomsRequest.displayName = 'proto.mcu.api.v1.RemoveRoomsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcu.api.v1.RemoveRoomsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mcu.api.v1.RemoveRoomsResponse.repeatedFields_, null);
};
goog.inherits(proto.mcu.api.v1.RemoveRoomsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcu.api.v1.RemoveRoomsResponse.displayName = 'proto.mcu.api.v1.RemoveRoomsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcu.api.v1.UpdateBroadcastRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mcu.api.v1.UpdateBroadcastRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcu.api.v1.UpdateBroadcastRequest.displayName = 'proto.mcu.api.v1.UpdateBroadcastRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcu.api.v1.UpdateMixerType = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mcu.api.v1.UpdateMixerType, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcu.api.v1.UpdateMixerType.displayName = 'proto.mcu.api.v1.UpdateMixerType';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcu.api.v1.UpdateRoomGridOrder = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mcu.api.v1.UpdateRoomGridOrder.repeatedFields_, null);
};
goog.inherits(proto.mcu.api.v1.UpdateRoomGridOrder, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcu.api.v1.UpdateRoomGridOrder.displayName = 'proto.mcu.api.v1.UpdateRoomGridOrder';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcu.api.v1.UpdateBroadcastResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mcu.api.v1.UpdateBroadcastResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcu.api.v1.UpdateBroadcastResponse.displayName = 'proto.mcu.api.v1.UpdateBroadcastResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcu.api.v1.UpdateBroadcastPerformers = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mcu.api.v1.UpdateBroadcastPerformers.repeatedFields_, null);
};
goog.inherits(proto.mcu.api.v1.UpdateBroadcastPerformers, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcu.api.v1.UpdateBroadcastPerformers.displayName = 'proto.mcu.api.v1.UpdateBroadcastPerformers';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcu.api.v1.UpdateBroadcastSwapPerformers = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mcu.api.v1.UpdateBroadcastSwapPerformers, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcu.api.v1.UpdateBroadcastSwapPerformers.displayName = 'proto.mcu.api.v1.UpdateBroadcastSwapPerformers';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcu.api.v1.UpdateBroadcastLayout = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mcu.api.v1.UpdateBroadcastLayout, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcu.api.v1.UpdateBroadcastLayout.displayName = 'proto.mcu.api.v1.UpdateBroadcastLayout';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcu.api.v1.GetStreamersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mcu.api.v1.GetStreamersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcu.api.v1.GetStreamersRequest.displayName = 'proto.mcu.api.v1.GetStreamersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcu.api.v1.GetStreamersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mcu.api.v1.GetStreamersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcu.api.v1.GetStreamersResponse.displayName = 'proto.mcu.api.v1.GetStreamersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcu.api.v1.GetStreamerRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mcu.api.v1.GetStreamerRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcu.api.v1.GetStreamerRequest.displayName = 'proto.mcu.api.v1.GetStreamerRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcu.api.v1.GetStreamerResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mcu.api.v1.GetStreamerResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcu.api.v1.GetStreamerResponse.displayName = 'proto.mcu.api.v1.GetStreamerResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcu.api.v1.SetStreamerRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mcu.api.v1.SetStreamerRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcu.api.v1.SetStreamerRequest.displayName = 'proto.mcu.api.v1.SetStreamerRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcu.api.v1.SetStreamerResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mcu.api.v1.SetStreamerResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcu.api.v1.SetStreamerResponse.displayName = 'proto.mcu.api.v1.SetStreamerResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcu.api.v1.StartStreamingRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mcu.api.v1.StartStreamingRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcu.api.v1.StartStreamingRequest.displayName = 'proto.mcu.api.v1.StartStreamingRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcu.api.v1.StartStreamingResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mcu.api.v1.StartStreamingResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcu.api.v1.StartStreamingResponse.displayName = 'proto.mcu.api.v1.StartStreamingResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcu.api.v1.StopStreamingRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mcu.api.v1.StopStreamingRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcu.api.v1.StopStreamingRequest.displayName = 'proto.mcu.api.v1.StopStreamingRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcu.api.v1.StopStreamingResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mcu.api.v1.StopStreamingResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcu.api.v1.StopStreamingResponse.displayName = 'proto.mcu.api.v1.StopStreamingResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcu.api.v1.AddRoomRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mcu.api.v1.AddRoomRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcu.api.v1.AddRoomRequest.displayName = 'proto.mcu.api.v1.AddRoomRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcu.api.v1.AddRoomResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mcu.api.v1.AddRoomResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcu.api.v1.AddRoomResponse.displayName = 'proto.mcu.api.v1.AddRoomResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcu.api.v1.RemoveRoomRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mcu.api.v1.RemoveRoomRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcu.api.v1.RemoveRoomRequest.displayName = 'proto.mcu.api.v1.RemoveRoomRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcu.api.v1.RemoveRoomResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mcu.api.v1.RemoveRoomResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcu.api.v1.RemoveRoomResponse.displayName = 'proto.mcu.api.v1.RemoveRoomResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcu.api.v1.OutputStreamRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mcu.api.v1.OutputStreamRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcu.api.v1.OutputStreamRequest.displayName = 'proto.mcu.api.v1.OutputStreamRequest';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mcu.api.v1.UpdateRoomsRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcu.api.v1.UpdateRoomsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mcu.api.v1.UpdateRoomsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcu.api.v1.UpdateRoomsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.UpdateRoomsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    updateRoomsList: jspb.Message.toObjectList(msg.getUpdateRoomsList(),
    proto.mcu.api.v1.UpdateRoom.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcu.api.v1.UpdateRoomsRequest}
 */
proto.mcu.api.v1.UpdateRoomsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcu.api.v1.UpdateRoomsRequest;
  return proto.mcu.api.v1.UpdateRoomsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcu.api.v1.UpdateRoomsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcu.api.v1.UpdateRoomsRequest}
 */
proto.mcu.api.v1.UpdateRoomsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mcu.api.v1.UpdateRoom;
      reader.readMessage(value,proto.mcu.api.v1.UpdateRoom.deserializeBinaryFromReader);
      msg.addUpdateRooms(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcu.api.v1.UpdateRoomsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcu.api.v1.UpdateRoomsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcu.api.v1.UpdateRoomsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.UpdateRoomsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUpdateRoomsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.mcu.api.v1.UpdateRoom.serializeBinaryToWriter
    );
  }
};


/**
 * repeated UpdateRoom update_rooms = 1;
 * @return {!Array<!proto.mcu.api.v1.UpdateRoom>}
 */
proto.mcu.api.v1.UpdateRoomsRequest.prototype.getUpdateRoomsList = function() {
  return /** @type{!Array<!proto.mcu.api.v1.UpdateRoom>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mcu.api.v1.UpdateRoom, 1));
};


/**
 * @param {!Array<!proto.mcu.api.v1.UpdateRoom>} value
 * @return {!proto.mcu.api.v1.UpdateRoomsRequest} returns this
*/
proto.mcu.api.v1.UpdateRoomsRequest.prototype.setUpdateRoomsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.mcu.api.v1.UpdateRoom=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mcu.api.v1.UpdateRoom}
 */
proto.mcu.api.v1.UpdateRoomsRequest.prototype.addUpdateRooms = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.mcu.api.v1.UpdateRoom, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mcu.api.v1.UpdateRoomsRequest} returns this
 */
proto.mcu.api.v1.UpdateRoomsRequest.prototype.clearUpdateRoomsList = function() {
  return this.setUpdateRoomsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mcu.api.v1.UpdateRoomsResponse.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcu.api.v1.UpdateRoomsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mcu.api.v1.UpdateRoomsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcu.api.v1.UpdateRoomsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.UpdateRoomsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    successfulRoomUpdatesList: jspb.Message.toObjectList(msg.getSuccessfulRoomUpdatesList(),
    mcu_models_pb.Room.toObject, includeInstance),
    failedRoomUpdatesList: jspb.Message.toObjectList(msg.getFailedRoomUpdatesList(),
    mcu_models_pb.Room.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcu.api.v1.UpdateRoomsResponse}
 */
proto.mcu.api.v1.UpdateRoomsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcu.api.v1.UpdateRoomsResponse;
  return proto.mcu.api.v1.UpdateRoomsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcu.api.v1.UpdateRoomsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcu.api.v1.UpdateRoomsResponse}
 */
proto.mcu.api.v1.UpdateRoomsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new mcu_models_pb.Room;
      reader.readMessage(value,mcu_models_pb.Room.deserializeBinaryFromReader);
      msg.addSuccessfulRoomUpdates(value);
      break;
    case 2:
      var value = new mcu_models_pb.Room;
      reader.readMessage(value,mcu_models_pb.Room.deserializeBinaryFromReader);
      msg.addFailedRoomUpdates(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcu.api.v1.UpdateRoomsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcu.api.v1.UpdateRoomsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcu.api.v1.UpdateRoomsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.UpdateRoomsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccessfulRoomUpdatesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      mcu_models_pb.Room.serializeBinaryToWriter
    );
  }
  f = message.getFailedRoomUpdatesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      mcu_models_pb.Room.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Room successful_room_updates = 1;
 * @return {!Array<!proto.mcu.api.v1.Room>}
 */
proto.mcu.api.v1.UpdateRoomsResponse.prototype.getSuccessfulRoomUpdatesList = function() {
  return /** @type{!Array<!proto.mcu.api.v1.Room>} */ (
    jspb.Message.getRepeatedWrapperField(this, mcu_models_pb.Room, 1));
};


/**
 * @param {!Array<!proto.mcu.api.v1.Room>} value
 * @return {!proto.mcu.api.v1.UpdateRoomsResponse} returns this
*/
proto.mcu.api.v1.UpdateRoomsResponse.prototype.setSuccessfulRoomUpdatesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.mcu.api.v1.Room=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mcu.api.v1.Room}
 */
proto.mcu.api.v1.UpdateRoomsResponse.prototype.addSuccessfulRoomUpdates = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.mcu.api.v1.Room, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mcu.api.v1.UpdateRoomsResponse} returns this
 */
proto.mcu.api.v1.UpdateRoomsResponse.prototype.clearSuccessfulRoomUpdatesList = function() {
  return this.setSuccessfulRoomUpdatesList([]);
};


/**
 * repeated Room failed_room_updates = 2;
 * @return {!Array<!proto.mcu.api.v1.Room>}
 */
proto.mcu.api.v1.UpdateRoomsResponse.prototype.getFailedRoomUpdatesList = function() {
  return /** @type{!Array<!proto.mcu.api.v1.Room>} */ (
    jspb.Message.getRepeatedWrapperField(this, mcu_models_pb.Room, 2));
};


/**
 * @param {!Array<!proto.mcu.api.v1.Room>} value
 * @return {!proto.mcu.api.v1.UpdateRoomsResponse} returns this
*/
proto.mcu.api.v1.UpdateRoomsResponse.prototype.setFailedRoomUpdatesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.mcu.api.v1.Room=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mcu.api.v1.Room}
 */
proto.mcu.api.v1.UpdateRoomsResponse.prototype.addFailedRoomUpdates = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.mcu.api.v1.Room, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mcu.api.v1.UpdateRoomsResponse} returns this
 */
proto.mcu.api.v1.UpdateRoomsResponse.prototype.clearFailedRoomUpdatesList = function() {
  return this.setFailedRoomUpdatesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcu.api.v1.UpdateRoom.prototype.toObject = function(opt_includeInstance) {
  return proto.mcu.api.v1.UpdateRoom.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcu.api.v1.UpdateRoom} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.UpdateRoom.toObject = function(includeInstance, msg) {
  var f, obj = {
    roomId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    roomBroadcast: (f = msg.getRoomBroadcast()) && proto.mcu.api.v1.UpdateRoomBroadcast.toObject(includeInstance, f),
    eventId: (f = msg.getEventId()) && proto.mcu.api.v1.StringValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcu.api.v1.UpdateRoom}
 */
proto.mcu.api.v1.UpdateRoom.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcu.api.v1.UpdateRoom;
  return proto.mcu.api.v1.UpdateRoom.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcu.api.v1.UpdateRoom} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcu.api.v1.UpdateRoom}
 */
proto.mcu.api.v1.UpdateRoom.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoomId(value);
      break;
    case 2:
      var value = new proto.mcu.api.v1.UpdateRoomBroadcast;
      reader.readMessage(value,proto.mcu.api.v1.UpdateRoomBroadcast.deserializeBinaryFromReader);
      msg.setRoomBroadcast(value);
      break;
    case 3:
      var value = new proto.mcu.api.v1.StringValue;
      reader.readMessage(value,proto.mcu.api.v1.StringValue.deserializeBinaryFromReader);
      msg.setEventId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcu.api.v1.UpdateRoom.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcu.api.v1.UpdateRoom.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcu.api.v1.UpdateRoom} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.UpdateRoom.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoomId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRoomBroadcast();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mcu.api.v1.UpdateRoomBroadcast.serializeBinaryToWriter
    );
  }
  f = message.getEventId();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.mcu.api.v1.StringValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional string room_id = 1;
 * @return {string}
 */
proto.mcu.api.v1.UpdateRoom.prototype.getRoomId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mcu.api.v1.UpdateRoom} returns this
 */
proto.mcu.api.v1.UpdateRoom.prototype.setRoomId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional UpdateRoomBroadcast room_broadcast = 2;
 * @return {?proto.mcu.api.v1.UpdateRoomBroadcast}
 */
proto.mcu.api.v1.UpdateRoom.prototype.getRoomBroadcast = function() {
  return /** @type{?proto.mcu.api.v1.UpdateRoomBroadcast} */ (
    jspb.Message.getWrapperField(this, proto.mcu.api.v1.UpdateRoomBroadcast, 2));
};


/**
 * @param {?proto.mcu.api.v1.UpdateRoomBroadcast|undefined} value
 * @return {!proto.mcu.api.v1.UpdateRoom} returns this
*/
proto.mcu.api.v1.UpdateRoom.prototype.setRoomBroadcast = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mcu.api.v1.UpdateRoom} returns this
 */
proto.mcu.api.v1.UpdateRoom.prototype.clearRoomBroadcast = function() {
  return this.setRoomBroadcast(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mcu.api.v1.UpdateRoom.prototype.hasRoomBroadcast = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional StringValue event_id = 3;
 * @return {?proto.mcu.api.v1.StringValue}
 */
proto.mcu.api.v1.UpdateRoom.prototype.getEventId = function() {
  return /** @type{?proto.mcu.api.v1.StringValue} */ (
    jspb.Message.getWrapperField(this, proto.mcu.api.v1.StringValue, 3));
};


/**
 * @param {?proto.mcu.api.v1.StringValue|undefined} value
 * @return {!proto.mcu.api.v1.UpdateRoom} returns this
*/
proto.mcu.api.v1.UpdateRoom.prototype.setEventId = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mcu.api.v1.UpdateRoom} returns this
 */
proto.mcu.api.v1.UpdateRoom.prototype.clearEventId = function() {
  return this.setEventId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mcu.api.v1.UpdateRoom.prototype.hasEventId = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcu.api.v1.StringValue.prototype.toObject = function(opt_includeInstance) {
  return proto.mcu.api.v1.StringValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcu.api.v1.StringValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.StringValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcu.api.v1.StringValue}
 */
proto.mcu.api.v1.StringValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcu.api.v1.StringValue;
  return proto.mcu.api.v1.StringValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcu.api.v1.StringValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcu.api.v1.StringValue}
 */
proto.mcu.api.v1.StringValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcu.api.v1.StringValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcu.api.v1.StringValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcu.api.v1.StringValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.StringValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string value = 1;
 * @return {string}
 */
proto.mcu.api.v1.StringValue.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mcu.api.v1.StringValue} returns this
 */
proto.mcu.api.v1.StringValue.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcu.api.v1.UpdateRoomBroadcast.prototype.toObject = function(opt_includeInstance) {
  return proto.mcu.api.v1.UpdateRoomBroadcast.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcu.api.v1.UpdateRoomBroadcast} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.UpdateRoomBroadcast.toObject = function(includeInstance, msg) {
  var f, obj = {
    updateBroadcastLayout: (f = msg.getUpdateBroadcastLayout()) && proto.mcu.api.v1.UpdateBroadcastLayout.toObject(includeInstance, f),
    updateBroadcastPerformers: (f = msg.getUpdateBroadcastPerformers()) && proto.mcu.api.v1.UpdateBroadcastPerformers.toObject(includeInstance, f),
    updateMixerType: (f = msg.getUpdateMixerType()) && proto.mcu.api.v1.UpdateMixerType.toObject(includeInstance, f),
    updateRoomGridOrder: (f = msg.getUpdateRoomGridOrder()) && proto.mcu.api.v1.UpdateRoomGridOrder.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcu.api.v1.UpdateRoomBroadcast}
 */
proto.mcu.api.v1.UpdateRoomBroadcast.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcu.api.v1.UpdateRoomBroadcast;
  return proto.mcu.api.v1.UpdateRoomBroadcast.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcu.api.v1.UpdateRoomBroadcast} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcu.api.v1.UpdateRoomBroadcast}
 */
proto.mcu.api.v1.UpdateRoomBroadcast.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new proto.mcu.api.v1.UpdateBroadcastLayout;
      reader.readMessage(value,proto.mcu.api.v1.UpdateBroadcastLayout.deserializeBinaryFromReader);
      msg.setUpdateBroadcastLayout(value);
      break;
    case 3:
      var value = new proto.mcu.api.v1.UpdateBroadcastPerformers;
      reader.readMessage(value,proto.mcu.api.v1.UpdateBroadcastPerformers.deserializeBinaryFromReader);
      msg.setUpdateBroadcastPerformers(value);
      break;
    case 4:
      var value = new proto.mcu.api.v1.UpdateMixerType;
      reader.readMessage(value,proto.mcu.api.v1.UpdateMixerType.deserializeBinaryFromReader);
      msg.setUpdateMixerType(value);
      break;
    case 5:
      var value = new proto.mcu.api.v1.UpdateRoomGridOrder;
      reader.readMessage(value,proto.mcu.api.v1.UpdateRoomGridOrder.deserializeBinaryFromReader);
      msg.setUpdateRoomGridOrder(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcu.api.v1.UpdateRoomBroadcast.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcu.api.v1.UpdateRoomBroadcast.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcu.api.v1.UpdateRoomBroadcast} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.UpdateRoomBroadcast.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUpdateBroadcastLayout();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mcu.api.v1.UpdateBroadcastLayout.serializeBinaryToWriter
    );
  }
  f = message.getUpdateBroadcastPerformers();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.mcu.api.v1.UpdateBroadcastPerformers.serializeBinaryToWriter
    );
  }
  f = message.getUpdateMixerType();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.mcu.api.v1.UpdateMixerType.serializeBinaryToWriter
    );
  }
  f = message.getUpdateRoomGridOrder();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.mcu.api.v1.UpdateRoomGridOrder.serializeBinaryToWriter
    );
  }
};


/**
 * optional UpdateBroadcastLayout update_broadcast_layout = 2;
 * @return {?proto.mcu.api.v1.UpdateBroadcastLayout}
 */
proto.mcu.api.v1.UpdateRoomBroadcast.prototype.getUpdateBroadcastLayout = function() {
  return /** @type{?proto.mcu.api.v1.UpdateBroadcastLayout} */ (
    jspb.Message.getWrapperField(this, proto.mcu.api.v1.UpdateBroadcastLayout, 2));
};


/**
 * @param {?proto.mcu.api.v1.UpdateBroadcastLayout|undefined} value
 * @return {!proto.mcu.api.v1.UpdateRoomBroadcast} returns this
*/
proto.mcu.api.v1.UpdateRoomBroadcast.prototype.setUpdateBroadcastLayout = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mcu.api.v1.UpdateRoomBroadcast} returns this
 */
proto.mcu.api.v1.UpdateRoomBroadcast.prototype.clearUpdateBroadcastLayout = function() {
  return this.setUpdateBroadcastLayout(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mcu.api.v1.UpdateRoomBroadcast.prototype.hasUpdateBroadcastLayout = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional UpdateBroadcastPerformers update_broadcast_performers = 3;
 * @return {?proto.mcu.api.v1.UpdateBroadcastPerformers}
 */
proto.mcu.api.v1.UpdateRoomBroadcast.prototype.getUpdateBroadcastPerformers = function() {
  return /** @type{?proto.mcu.api.v1.UpdateBroadcastPerformers} */ (
    jspb.Message.getWrapperField(this, proto.mcu.api.v1.UpdateBroadcastPerformers, 3));
};


/**
 * @param {?proto.mcu.api.v1.UpdateBroadcastPerformers|undefined} value
 * @return {!proto.mcu.api.v1.UpdateRoomBroadcast} returns this
*/
proto.mcu.api.v1.UpdateRoomBroadcast.prototype.setUpdateBroadcastPerformers = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mcu.api.v1.UpdateRoomBroadcast} returns this
 */
proto.mcu.api.v1.UpdateRoomBroadcast.prototype.clearUpdateBroadcastPerformers = function() {
  return this.setUpdateBroadcastPerformers(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mcu.api.v1.UpdateRoomBroadcast.prototype.hasUpdateBroadcastPerformers = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional UpdateMixerType update_mixer_type = 4;
 * @return {?proto.mcu.api.v1.UpdateMixerType}
 */
proto.mcu.api.v1.UpdateRoomBroadcast.prototype.getUpdateMixerType = function() {
  return /** @type{?proto.mcu.api.v1.UpdateMixerType} */ (
    jspb.Message.getWrapperField(this, proto.mcu.api.v1.UpdateMixerType, 4));
};


/**
 * @param {?proto.mcu.api.v1.UpdateMixerType|undefined} value
 * @return {!proto.mcu.api.v1.UpdateRoomBroadcast} returns this
*/
proto.mcu.api.v1.UpdateRoomBroadcast.prototype.setUpdateMixerType = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mcu.api.v1.UpdateRoomBroadcast} returns this
 */
proto.mcu.api.v1.UpdateRoomBroadcast.prototype.clearUpdateMixerType = function() {
  return this.setUpdateMixerType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mcu.api.v1.UpdateRoomBroadcast.prototype.hasUpdateMixerType = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional UpdateRoomGridOrder update_room_grid_order = 5;
 * @return {?proto.mcu.api.v1.UpdateRoomGridOrder}
 */
proto.mcu.api.v1.UpdateRoomBroadcast.prototype.getUpdateRoomGridOrder = function() {
  return /** @type{?proto.mcu.api.v1.UpdateRoomGridOrder} */ (
    jspb.Message.getWrapperField(this, proto.mcu.api.v1.UpdateRoomGridOrder, 5));
};


/**
 * @param {?proto.mcu.api.v1.UpdateRoomGridOrder|undefined} value
 * @return {!proto.mcu.api.v1.UpdateRoomBroadcast} returns this
*/
proto.mcu.api.v1.UpdateRoomBroadcast.prototype.setUpdateRoomGridOrder = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mcu.api.v1.UpdateRoomBroadcast} returns this
 */
proto.mcu.api.v1.UpdateRoomBroadcast.prototype.clearUpdateRoomGridOrder = function() {
  return this.setUpdateRoomGridOrder(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mcu.api.v1.UpdateRoomBroadcast.prototype.hasUpdateRoomGridOrder = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcu.api.v1.GetRoomRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mcu.api.v1.GetRoomRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcu.api.v1.GetRoomRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.GetRoomRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    roomId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcu.api.v1.GetRoomRequest}
 */
proto.mcu.api.v1.GetRoomRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcu.api.v1.GetRoomRequest;
  return proto.mcu.api.v1.GetRoomRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcu.api.v1.GetRoomRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcu.api.v1.GetRoomRequest}
 */
proto.mcu.api.v1.GetRoomRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoomId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcu.api.v1.GetRoomRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcu.api.v1.GetRoomRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcu.api.v1.GetRoomRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.GetRoomRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoomId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string room_id = 1;
 * @return {string}
 */
proto.mcu.api.v1.GetRoomRequest.prototype.getRoomId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mcu.api.v1.GetRoomRequest} returns this
 */
proto.mcu.api.v1.GetRoomRequest.prototype.setRoomId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcu.api.v1.GetRoomResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mcu.api.v1.GetRoomResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcu.api.v1.GetRoomResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.GetRoomResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    room: (f = msg.getRoom()) && mcu_models_pb.Room.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcu.api.v1.GetRoomResponse}
 */
proto.mcu.api.v1.GetRoomResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcu.api.v1.GetRoomResponse;
  return proto.mcu.api.v1.GetRoomResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcu.api.v1.GetRoomResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcu.api.v1.GetRoomResponse}
 */
proto.mcu.api.v1.GetRoomResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new mcu_models_pb.Room;
      reader.readMessage(value,mcu_models_pb.Room.deserializeBinaryFromReader);
      msg.setRoom(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcu.api.v1.GetRoomResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcu.api.v1.GetRoomResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcu.api.v1.GetRoomResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.GetRoomResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoom();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      mcu_models_pb.Room.serializeBinaryToWriter
    );
  }
};


/**
 * optional Room room = 1;
 * @return {?proto.mcu.api.v1.Room}
 */
proto.mcu.api.v1.GetRoomResponse.prototype.getRoom = function() {
  return /** @type{?proto.mcu.api.v1.Room} */ (
    jspb.Message.getWrapperField(this, mcu_models_pb.Room, 1));
};


/**
 * @param {?proto.mcu.api.v1.Room|undefined} value
 * @return {!proto.mcu.api.v1.GetRoomResponse} returns this
*/
proto.mcu.api.v1.GetRoomResponse.prototype.setRoom = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mcu.api.v1.GetRoomResponse} returns this
 */
proto.mcu.api.v1.GetRoomResponse.prototype.clearRoom = function() {
  return this.setRoom(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mcu.api.v1.GetRoomResponse.prototype.hasRoom = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mcu.api.v1.ListRoomsRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcu.api.v1.ListRoomsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mcu.api.v1.ListRoomsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcu.api.v1.ListRoomsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.ListRoomsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    roomIdsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcu.api.v1.ListRoomsRequest}
 */
proto.mcu.api.v1.ListRoomsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcu.api.v1.ListRoomsRequest;
  return proto.mcu.api.v1.ListRoomsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcu.api.v1.ListRoomsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcu.api.v1.ListRoomsRequest}
 */
proto.mcu.api.v1.ListRoomsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addRoomIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcu.api.v1.ListRoomsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcu.api.v1.ListRoomsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcu.api.v1.ListRoomsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.ListRoomsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoomIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string room_ids = 1;
 * @return {!Array<string>}
 */
proto.mcu.api.v1.ListRoomsRequest.prototype.getRoomIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.mcu.api.v1.ListRoomsRequest} returns this
 */
proto.mcu.api.v1.ListRoomsRequest.prototype.setRoomIdsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.mcu.api.v1.ListRoomsRequest} returns this
 */
proto.mcu.api.v1.ListRoomsRequest.prototype.addRoomIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mcu.api.v1.ListRoomsRequest} returns this
 */
proto.mcu.api.v1.ListRoomsRequest.prototype.clearRoomIdsList = function() {
  return this.setRoomIdsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mcu.api.v1.ListRoomsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcu.api.v1.ListRoomsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mcu.api.v1.ListRoomsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcu.api.v1.ListRoomsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.ListRoomsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    roomsList: jspb.Message.toObjectList(msg.getRoomsList(),
    mcu_models_pb.Room.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcu.api.v1.ListRoomsResponse}
 */
proto.mcu.api.v1.ListRoomsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcu.api.v1.ListRoomsResponse;
  return proto.mcu.api.v1.ListRoomsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcu.api.v1.ListRoomsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcu.api.v1.ListRoomsResponse}
 */
proto.mcu.api.v1.ListRoomsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new mcu_models_pb.Room;
      reader.readMessage(value,mcu_models_pb.Room.deserializeBinaryFromReader);
      msg.addRooms(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcu.api.v1.ListRoomsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcu.api.v1.ListRoomsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcu.api.v1.ListRoomsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.ListRoomsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoomsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      mcu_models_pb.Room.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Room rooms = 1;
 * @return {!Array<!proto.mcu.api.v1.Room>}
 */
proto.mcu.api.v1.ListRoomsResponse.prototype.getRoomsList = function() {
  return /** @type{!Array<!proto.mcu.api.v1.Room>} */ (
    jspb.Message.getRepeatedWrapperField(this, mcu_models_pb.Room, 1));
};


/**
 * @param {!Array<!proto.mcu.api.v1.Room>} value
 * @return {!proto.mcu.api.v1.ListRoomsResponse} returns this
*/
proto.mcu.api.v1.ListRoomsResponse.prototype.setRoomsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.mcu.api.v1.Room=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mcu.api.v1.Room}
 */
proto.mcu.api.v1.ListRoomsResponse.prototype.addRooms = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.mcu.api.v1.Room, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mcu.api.v1.ListRoomsResponse} returns this
 */
proto.mcu.api.v1.ListRoomsResponse.prototype.clearRoomsList = function() {
  return this.setRoomsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mcu.api.v1.StopRoomEventsRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcu.api.v1.StopRoomEventsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mcu.api.v1.StopRoomEventsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcu.api.v1.StopRoomEventsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.StopRoomEventsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    roomIdsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcu.api.v1.StopRoomEventsRequest}
 */
proto.mcu.api.v1.StopRoomEventsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcu.api.v1.StopRoomEventsRequest;
  return proto.mcu.api.v1.StopRoomEventsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcu.api.v1.StopRoomEventsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcu.api.v1.StopRoomEventsRequest}
 */
proto.mcu.api.v1.StopRoomEventsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addRoomIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcu.api.v1.StopRoomEventsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcu.api.v1.StopRoomEventsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcu.api.v1.StopRoomEventsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.StopRoomEventsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoomIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string room_ids = 1;
 * @return {!Array<string>}
 */
proto.mcu.api.v1.StopRoomEventsRequest.prototype.getRoomIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.mcu.api.v1.StopRoomEventsRequest} returns this
 */
proto.mcu.api.v1.StopRoomEventsRequest.prototype.setRoomIdsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.mcu.api.v1.StopRoomEventsRequest} returns this
 */
proto.mcu.api.v1.StopRoomEventsRequest.prototype.addRoomIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mcu.api.v1.StopRoomEventsRequest} returns this
 */
proto.mcu.api.v1.StopRoomEventsRequest.prototype.clearRoomIdsList = function() {
  return this.setRoomIdsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mcu.api.v1.StopRoomEventsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcu.api.v1.StopRoomEventsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mcu.api.v1.StopRoomEventsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcu.api.v1.StopRoomEventsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.StopRoomEventsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    roomsList: jspb.Message.toObjectList(msg.getRoomsList(),
    mcu_models_pb.Room.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcu.api.v1.StopRoomEventsResponse}
 */
proto.mcu.api.v1.StopRoomEventsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcu.api.v1.StopRoomEventsResponse;
  return proto.mcu.api.v1.StopRoomEventsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcu.api.v1.StopRoomEventsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcu.api.v1.StopRoomEventsResponse}
 */
proto.mcu.api.v1.StopRoomEventsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new mcu_models_pb.Room;
      reader.readMessage(value,mcu_models_pb.Room.deserializeBinaryFromReader);
      msg.addRooms(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcu.api.v1.StopRoomEventsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcu.api.v1.StopRoomEventsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcu.api.v1.StopRoomEventsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.StopRoomEventsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoomsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      mcu_models_pb.Room.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Room rooms = 1;
 * @return {!Array<!proto.mcu.api.v1.Room>}
 */
proto.mcu.api.v1.StopRoomEventsResponse.prototype.getRoomsList = function() {
  return /** @type{!Array<!proto.mcu.api.v1.Room>} */ (
    jspb.Message.getRepeatedWrapperField(this, mcu_models_pb.Room, 1));
};


/**
 * @param {!Array<!proto.mcu.api.v1.Room>} value
 * @return {!proto.mcu.api.v1.StopRoomEventsResponse} returns this
*/
proto.mcu.api.v1.StopRoomEventsResponse.prototype.setRoomsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.mcu.api.v1.Room=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mcu.api.v1.Room}
 */
proto.mcu.api.v1.StopRoomEventsResponse.prototype.addRooms = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.mcu.api.v1.Room, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mcu.api.v1.StopRoomEventsResponse} returns this
 */
proto.mcu.api.v1.StopRoomEventsResponse.prototype.clearRoomsList = function() {
  return this.setRoomsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mcu.api.v1.StartRoomEventsRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcu.api.v1.StartRoomEventsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mcu.api.v1.StartRoomEventsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcu.api.v1.StartRoomEventsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.StartRoomEventsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    updateRoomsList: jspb.Message.toObjectList(msg.getUpdateRoomsList(),
    proto.mcu.api.v1.UpdateRoom.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcu.api.v1.StartRoomEventsRequest}
 */
proto.mcu.api.v1.StartRoomEventsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcu.api.v1.StartRoomEventsRequest;
  return proto.mcu.api.v1.StartRoomEventsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcu.api.v1.StartRoomEventsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcu.api.v1.StartRoomEventsRequest}
 */
proto.mcu.api.v1.StartRoomEventsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mcu.api.v1.UpdateRoom;
      reader.readMessage(value,proto.mcu.api.v1.UpdateRoom.deserializeBinaryFromReader);
      msg.addUpdateRooms(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcu.api.v1.StartRoomEventsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcu.api.v1.StartRoomEventsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcu.api.v1.StartRoomEventsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.StartRoomEventsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUpdateRoomsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.mcu.api.v1.UpdateRoom.serializeBinaryToWriter
    );
  }
};


/**
 * repeated UpdateRoom update_rooms = 1;
 * @return {!Array<!proto.mcu.api.v1.UpdateRoom>}
 */
proto.mcu.api.v1.StartRoomEventsRequest.prototype.getUpdateRoomsList = function() {
  return /** @type{!Array<!proto.mcu.api.v1.UpdateRoom>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mcu.api.v1.UpdateRoom, 1));
};


/**
 * @param {!Array<!proto.mcu.api.v1.UpdateRoom>} value
 * @return {!proto.mcu.api.v1.StartRoomEventsRequest} returns this
*/
proto.mcu.api.v1.StartRoomEventsRequest.prototype.setUpdateRoomsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.mcu.api.v1.UpdateRoom=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mcu.api.v1.UpdateRoom}
 */
proto.mcu.api.v1.StartRoomEventsRequest.prototype.addUpdateRooms = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.mcu.api.v1.UpdateRoom, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mcu.api.v1.StartRoomEventsRequest} returns this
 */
proto.mcu.api.v1.StartRoomEventsRequest.prototype.clearUpdateRoomsList = function() {
  return this.setUpdateRoomsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mcu.api.v1.StartRoomEventsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcu.api.v1.StartRoomEventsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mcu.api.v1.StartRoomEventsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcu.api.v1.StartRoomEventsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.StartRoomEventsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    roomsList: jspb.Message.toObjectList(msg.getRoomsList(),
    mcu_models_pb.Room.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcu.api.v1.StartRoomEventsResponse}
 */
proto.mcu.api.v1.StartRoomEventsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcu.api.v1.StartRoomEventsResponse;
  return proto.mcu.api.v1.StartRoomEventsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcu.api.v1.StartRoomEventsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcu.api.v1.StartRoomEventsResponse}
 */
proto.mcu.api.v1.StartRoomEventsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new mcu_models_pb.Room;
      reader.readMessage(value,mcu_models_pb.Room.deserializeBinaryFromReader);
      msg.addRooms(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcu.api.v1.StartRoomEventsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcu.api.v1.StartRoomEventsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcu.api.v1.StartRoomEventsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.StartRoomEventsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoomsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      mcu_models_pb.Room.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Room rooms = 1;
 * @return {!Array<!proto.mcu.api.v1.Room>}
 */
proto.mcu.api.v1.StartRoomEventsResponse.prototype.getRoomsList = function() {
  return /** @type{!Array<!proto.mcu.api.v1.Room>} */ (
    jspb.Message.getRepeatedWrapperField(this, mcu_models_pb.Room, 1));
};


/**
 * @param {!Array<!proto.mcu.api.v1.Room>} value
 * @return {!proto.mcu.api.v1.StartRoomEventsResponse} returns this
*/
proto.mcu.api.v1.StartRoomEventsResponse.prototype.setRoomsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.mcu.api.v1.Room=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mcu.api.v1.Room}
 */
proto.mcu.api.v1.StartRoomEventsResponse.prototype.addRooms = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.mcu.api.v1.Room, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mcu.api.v1.StartRoomEventsResponse} returns this
 */
proto.mcu.api.v1.StartRoomEventsResponse.prototype.clearRoomsList = function() {
  return this.setRoomsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mcu.api.v1.AddRoomsRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcu.api.v1.AddRoomsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mcu.api.v1.AddRoomsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcu.api.v1.AddRoomsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.AddRoomsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    roomIdsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcu.api.v1.AddRoomsRequest}
 */
proto.mcu.api.v1.AddRoomsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcu.api.v1.AddRoomsRequest;
  return proto.mcu.api.v1.AddRoomsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcu.api.v1.AddRoomsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcu.api.v1.AddRoomsRequest}
 */
proto.mcu.api.v1.AddRoomsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addRoomIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcu.api.v1.AddRoomsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcu.api.v1.AddRoomsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcu.api.v1.AddRoomsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.AddRoomsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoomIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string room_ids = 1;
 * @return {!Array<string>}
 */
proto.mcu.api.v1.AddRoomsRequest.prototype.getRoomIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.mcu.api.v1.AddRoomsRequest} returns this
 */
proto.mcu.api.v1.AddRoomsRequest.prototype.setRoomIdsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.mcu.api.v1.AddRoomsRequest} returns this
 */
proto.mcu.api.v1.AddRoomsRequest.prototype.addRoomIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mcu.api.v1.AddRoomsRequest} returns this
 */
proto.mcu.api.v1.AddRoomsRequest.prototype.clearRoomIdsList = function() {
  return this.setRoomIdsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mcu.api.v1.AddRoomsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcu.api.v1.AddRoomsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mcu.api.v1.AddRoomsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcu.api.v1.AddRoomsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.AddRoomsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    roomIdsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcu.api.v1.AddRoomsResponse}
 */
proto.mcu.api.v1.AddRoomsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcu.api.v1.AddRoomsResponse;
  return proto.mcu.api.v1.AddRoomsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcu.api.v1.AddRoomsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcu.api.v1.AddRoomsResponse}
 */
proto.mcu.api.v1.AddRoomsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addRoomIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcu.api.v1.AddRoomsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcu.api.v1.AddRoomsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcu.api.v1.AddRoomsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.AddRoomsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoomIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string room_ids = 1;
 * @return {!Array<string>}
 */
proto.mcu.api.v1.AddRoomsResponse.prototype.getRoomIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.mcu.api.v1.AddRoomsResponse} returns this
 */
proto.mcu.api.v1.AddRoomsResponse.prototype.setRoomIdsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.mcu.api.v1.AddRoomsResponse} returns this
 */
proto.mcu.api.v1.AddRoomsResponse.prototype.addRoomIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mcu.api.v1.AddRoomsResponse} returns this
 */
proto.mcu.api.v1.AddRoomsResponse.prototype.clearRoomIdsList = function() {
  return this.setRoomIdsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mcu.api.v1.RemoveRoomsRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcu.api.v1.RemoveRoomsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mcu.api.v1.RemoveRoomsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcu.api.v1.RemoveRoomsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.RemoveRoomsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    roomIdsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcu.api.v1.RemoveRoomsRequest}
 */
proto.mcu.api.v1.RemoveRoomsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcu.api.v1.RemoveRoomsRequest;
  return proto.mcu.api.v1.RemoveRoomsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcu.api.v1.RemoveRoomsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcu.api.v1.RemoveRoomsRequest}
 */
proto.mcu.api.v1.RemoveRoomsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addRoomIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcu.api.v1.RemoveRoomsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcu.api.v1.RemoveRoomsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcu.api.v1.RemoveRoomsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.RemoveRoomsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoomIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string room_ids = 1;
 * @return {!Array<string>}
 */
proto.mcu.api.v1.RemoveRoomsRequest.prototype.getRoomIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.mcu.api.v1.RemoveRoomsRequest} returns this
 */
proto.mcu.api.v1.RemoveRoomsRequest.prototype.setRoomIdsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.mcu.api.v1.RemoveRoomsRequest} returns this
 */
proto.mcu.api.v1.RemoveRoomsRequest.prototype.addRoomIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mcu.api.v1.RemoveRoomsRequest} returns this
 */
proto.mcu.api.v1.RemoveRoomsRequest.prototype.clearRoomIdsList = function() {
  return this.setRoomIdsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mcu.api.v1.RemoveRoomsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcu.api.v1.RemoveRoomsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mcu.api.v1.RemoveRoomsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcu.api.v1.RemoveRoomsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.RemoveRoomsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    roomIdsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcu.api.v1.RemoveRoomsResponse}
 */
proto.mcu.api.v1.RemoveRoomsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcu.api.v1.RemoveRoomsResponse;
  return proto.mcu.api.v1.RemoveRoomsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcu.api.v1.RemoveRoomsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcu.api.v1.RemoveRoomsResponse}
 */
proto.mcu.api.v1.RemoveRoomsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addRoomIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcu.api.v1.RemoveRoomsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcu.api.v1.RemoveRoomsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcu.api.v1.RemoveRoomsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.RemoveRoomsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoomIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string room_ids = 1;
 * @return {!Array<string>}
 */
proto.mcu.api.v1.RemoveRoomsResponse.prototype.getRoomIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.mcu.api.v1.RemoveRoomsResponse} returns this
 */
proto.mcu.api.v1.RemoveRoomsResponse.prototype.setRoomIdsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.mcu.api.v1.RemoveRoomsResponse} returns this
 */
proto.mcu.api.v1.RemoveRoomsResponse.prototype.addRoomIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mcu.api.v1.RemoveRoomsResponse} returns this
 */
proto.mcu.api.v1.RemoveRoomsResponse.prototype.clearRoomIdsList = function() {
  return this.setRoomIdsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcu.api.v1.UpdateBroadcastRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mcu.api.v1.UpdateBroadcastRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcu.api.v1.UpdateBroadcastRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.UpdateBroadcastRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    roomId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    updateBroadcastLayout: (f = msg.getUpdateBroadcastLayout()) && proto.mcu.api.v1.UpdateBroadcastLayout.toObject(includeInstance, f),
    updateBroadcastPerformers: (f = msg.getUpdateBroadcastPerformers()) && proto.mcu.api.v1.UpdateBroadcastPerformers.toObject(includeInstance, f),
    updateMixerType: (f = msg.getUpdateMixerType()) && proto.mcu.api.v1.UpdateMixerType.toObject(includeInstance, f),
    updateRoomGridOrder: (f = msg.getUpdateRoomGridOrder()) && proto.mcu.api.v1.UpdateRoomGridOrder.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcu.api.v1.UpdateBroadcastRequest}
 */
proto.mcu.api.v1.UpdateBroadcastRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcu.api.v1.UpdateBroadcastRequest;
  return proto.mcu.api.v1.UpdateBroadcastRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcu.api.v1.UpdateBroadcastRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcu.api.v1.UpdateBroadcastRequest}
 */
proto.mcu.api.v1.UpdateBroadcastRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoomId(value);
      break;
    case 2:
      var value = new proto.mcu.api.v1.UpdateBroadcastLayout;
      reader.readMessage(value,proto.mcu.api.v1.UpdateBroadcastLayout.deserializeBinaryFromReader);
      msg.setUpdateBroadcastLayout(value);
      break;
    case 3:
      var value = new proto.mcu.api.v1.UpdateBroadcastPerformers;
      reader.readMessage(value,proto.mcu.api.v1.UpdateBroadcastPerformers.deserializeBinaryFromReader);
      msg.setUpdateBroadcastPerformers(value);
      break;
    case 4:
      var value = new proto.mcu.api.v1.UpdateMixerType;
      reader.readMessage(value,proto.mcu.api.v1.UpdateMixerType.deserializeBinaryFromReader);
      msg.setUpdateMixerType(value);
      break;
    case 5:
      var value = new proto.mcu.api.v1.UpdateRoomGridOrder;
      reader.readMessage(value,proto.mcu.api.v1.UpdateRoomGridOrder.deserializeBinaryFromReader);
      msg.setUpdateRoomGridOrder(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcu.api.v1.UpdateBroadcastRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcu.api.v1.UpdateBroadcastRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcu.api.v1.UpdateBroadcastRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.UpdateBroadcastRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoomId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUpdateBroadcastLayout();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mcu.api.v1.UpdateBroadcastLayout.serializeBinaryToWriter
    );
  }
  f = message.getUpdateBroadcastPerformers();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.mcu.api.v1.UpdateBroadcastPerformers.serializeBinaryToWriter
    );
  }
  f = message.getUpdateMixerType();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.mcu.api.v1.UpdateMixerType.serializeBinaryToWriter
    );
  }
  f = message.getUpdateRoomGridOrder();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.mcu.api.v1.UpdateRoomGridOrder.serializeBinaryToWriter
    );
  }
};


/**
 * optional string room_id = 1;
 * @return {string}
 */
proto.mcu.api.v1.UpdateBroadcastRequest.prototype.getRoomId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mcu.api.v1.UpdateBroadcastRequest} returns this
 */
proto.mcu.api.v1.UpdateBroadcastRequest.prototype.setRoomId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional UpdateBroadcastLayout update_broadcast_layout = 2;
 * @return {?proto.mcu.api.v1.UpdateBroadcastLayout}
 */
proto.mcu.api.v1.UpdateBroadcastRequest.prototype.getUpdateBroadcastLayout = function() {
  return /** @type{?proto.mcu.api.v1.UpdateBroadcastLayout} */ (
    jspb.Message.getWrapperField(this, proto.mcu.api.v1.UpdateBroadcastLayout, 2));
};


/**
 * @param {?proto.mcu.api.v1.UpdateBroadcastLayout|undefined} value
 * @return {!proto.mcu.api.v1.UpdateBroadcastRequest} returns this
*/
proto.mcu.api.v1.UpdateBroadcastRequest.prototype.setUpdateBroadcastLayout = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mcu.api.v1.UpdateBroadcastRequest} returns this
 */
proto.mcu.api.v1.UpdateBroadcastRequest.prototype.clearUpdateBroadcastLayout = function() {
  return this.setUpdateBroadcastLayout(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mcu.api.v1.UpdateBroadcastRequest.prototype.hasUpdateBroadcastLayout = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional UpdateBroadcastPerformers update_broadcast_performers = 3;
 * @return {?proto.mcu.api.v1.UpdateBroadcastPerformers}
 */
proto.mcu.api.v1.UpdateBroadcastRequest.prototype.getUpdateBroadcastPerformers = function() {
  return /** @type{?proto.mcu.api.v1.UpdateBroadcastPerformers} */ (
    jspb.Message.getWrapperField(this, proto.mcu.api.v1.UpdateBroadcastPerformers, 3));
};


/**
 * @param {?proto.mcu.api.v1.UpdateBroadcastPerformers|undefined} value
 * @return {!proto.mcu.api.v1.UpdateBroadcastRequest} returns this
*/
proto.mcu.api.v1.UpdateBroadcastRequest.prototype.setUpdateBroadcastPerformers = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mcu.api.v1.UpdateBroadcastRequest} returns this
 */
proto.mcu.api.v1.UpdateBroadcastRequest.prototype.clearUpdateBroadcastPerformers = function() {
  return this.setUpdateBroadcastPerformers(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mcu.api.v1.UpdateBroadcastRequest.prototype.hasUpdateBroadcastPerformers = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional UpdateMixerType update_mixer_type = 4;
 * @return {?proto.mcu.api.v1.UpdateMixerType}
 */
proto.mcu.api.v1.UpdateBroadcastRequest.prototype.getUpdateMixerType = function() {
  return /** @type{?proto.mcu.api.v1.UpdateMixerType} */ (
    jspb.Message.getWrapperField(this, proto.mcu.api.v1.UpdateMixerType, 4));
};


/**
 * @param {?proto.mcu.api.v1.UpdateMixerType|undefined} value
 * @return {!proto.mcu.api.v1.UpdateBroadcastRequest} returns this
*/
proto.mcu.api.v1.UpdateBroadcastRequest.prototype.setUpdateMixerType = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mcu.api.v1.UpdateBroadcastRequest} returns this
 */
proto.mcu.api.v1.UpdateBroadcastRequest.prototype.clearUpdateMixerType = function() {
  return this.setUpdateMixerType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mcu.api.v1.UpdateBroadcastRequest.prototype.hasUpdateMixerType = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional UpdateRoomGridOrder update_room_grid_order = 5;
 * @return {?proto.mcu.api.v1.UpdateRoomGridOrder}
 */
proto.mcu.api.v1.UpdateBroadcastRequest.prototype.getUpdateRoomGridOrder = function() {
  return /** @type{?proto.mcu.api.v1.UpdateRoomGridOrder} */ (
    jspb.Message.getWrapperField(this, proto.mcu.api.v1.UpdateRoomGridOrder, 5));
};


/**
 * @param {?proto.mcu.api.v1.UpdateRoomGridOrder|undefined} value
 * @return {!proto.mcu.api.v1.UpdateBroadcastRequest} returns this
*/
proto.mcu.api.v1.UpdateBroadcastRequest.prototype.setUpdateRoomGridOrder = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mcu.api.v1.UpdateBroadcastRequest} returns this
 */
proto.mcu.api.v1.UpdateBroadcastRequest.prototype.clearUpdateRoomGridOrder = function() {
  return this.setUpdateRoomGridOrder(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mcu.api.v1.UpdateBroadcastRequest.prototype.hasUpdateRoomGridOrder = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcu.api.v1.UpdateMixerType.prototype.toObject = function(opt_includeInstance) {
  return proto.mcu.api.v1.UpdateMixerType.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcu.api.v1.UpdateMixerType} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.UpdateMixerType.toObject = function(includeInstance, msg) {
  var f, obj = {
    mode: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcu.api.v1.UpdateMixerType}
 */
proto.mcu.api.v1.UpdateMixerType.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcu.api.v1.UpdateMixerType;
  return proto.mcu.api.v1.UpdateMixerType.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcu.api.v1.UpdateMixerType} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcu.api.v1.UpdateMixerType}
 */
proto.mcu.api.v1.UpdateMixerType.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.mcu.api.v1.MixerType} */ (reader.readEnum());
      msg.setMode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcu.api.v1.UpdateMixerType.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcu.api.v1.UpdateMixerType.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcu.api.v1.UpdateMixerType} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.UpdateMixerType.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMode();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional MixerType mode = 1;
 * @return {!proto.mcu.api.v1.MixerType}
 */
proto.mcu.api.v1.UpdateMixerType.prototype.getMode = function() {
  return /** @type {!proto.mcu.api.v1.MixerType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.mcu.api.v1.MixerType} value
 * @return {!proto.mcu.api.v1.UpdateMixerType} returns this
 */
proto.mcu.api.v1.UpdateMixerType.prototype.setMode = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mcu.api.v1.UpdateRoomGridOrder.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcu.api.v1.UpdateRoomGridOrder.prototype.toObject = function(opt_includeInstance) {
  return proto.mcu.api.v1.UpdateRoomGridOrder.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcu.api.v1.UpdateRoomGridOrder} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.UpdateRoomGridOrder.toObject = function(includeInstance, msg) {
  var f, obj = {
    orderList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcu.api.v1.UpdateRoomGridOrder}
 */
proto.mcu.api.v1.UpdateRoomGridOrder.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcu.api.v1.UpdateRoomGridOrder;
  return proto.mcu.api.v1.UpdateRoomGridOrder.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcu.api.v1.UpdateRoomGridOrder} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcu.api.v1.UpdateRoomGridOrder}
 */
proto.mcu.api.v1.UpdateRoomGridOrder.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addOrder(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcu.api.v1.UpdateRoomGridOrder.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcu.api.v1.UpdateRoomGridOrder.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcu.api.v1.UpdateRoomGridOrder} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.UpdateRoomGridOrder.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrderList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string order = 1;
 * @return {!Array<string>}
 */
proto.mcu.api.v1.UpdateRoomGridOrder.prototype.getOrderList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.mcu.api.v1.UpdateRoomGridOrder} returns this
 */
proto.mcu.api.v1.UpdateRoomGridOrder.prototype.setOrderList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.mcu.api.v1.UpdateRoomGridOrder} returns this
 */
proto.mcu.api.v1.UpdateRoomGridOrder.prototype.addOrder = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mcu.api.v1.UpdateRoomGridOrder} returns this
 */
proto.mcu.api.v1.UpdateRoomGridOrder.prototype.clearOrderList = function() {
  return this.setOrderList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcu.api.v1.UpdateBroadcastResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mcu.api.v1.UpdateBroadcastResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcu.api.v1.UpdateBroadcastResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.UpdateBroadcastResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    roomId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    updateBroadcastLayout: (f = msg.getUpdateBroadcastLayout()) && proto.mcu.api.v1.UpdateBroadcastLayout.toObject(includeInstance, f),
    updateBroadcastPerformers: (f = msg.getUpdateBroadcastPerformers()) && proto.mcu.api.v1.UpdateBroadcastPerformers.toObject(includeInstance, f),
    updateMixerType: (f = msg.getUpdateMixerType()) && proto.mcu.api.v1.UpdateMixerType.toObject(includeInstance, f),
    updateRoomGridOrder: (f = msg.getUpdateRoomGridOrder()) && proto.mcu.api.v1.UpdateRoomGridOrder.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcu.api.v1.UpdateBroadcastResponse}
 */
proto.mcu.api.v1.UpdateBroadcastResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcu.api.v1.UpdateBroadcastResponse;
  return proto.mcu.api.v1.UpdateBroadcastResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcu.api.v1.UpdateBroadcastResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcu.api.v1.UpdateBroadcastResponse}
 */
proto.mcu.api.v1.UpdateBroadcastResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoomId(value);
      break;
    case 2:
      var value = new proto.mcu.api.v1.UpdateBroadcastLayout;
      reader.readMessage(value,proto.mcu.api.v1.UpdateBroadcastLayout.deserializeBinaryFromReader);
      msg.setUpdateBroadcastLayout(value);
      break;
    case 3:
      var value = new proto.mcu.api.v1.UpdateBroadcastPerformers;
      reader.readMessage(value,proto.mcu.api.v1.UpdateBroadcastPerformers.deserializeBinaryFromReader);
      msg.setUpdateBroadcastPerformers(value);
      break;
    case 4:
      var value = new proto.mcu.api.v1.UpdateMixerType;
      reader.readMessage(value,proto.mcu.api.v1.UpdateMixerType.deserializeBinaryFromReader);
      msg.setUpdateMixerType(value);
      break;
    case 5:
      var value = new proto.mcu.api.v1.UpdateRoomGridOrder;
      reader.readMessage(value,proto.mcu.api.v1.UpdateRoomGridOrder.deserializeBinaryFromReader);
      msg.setUpdateRoomGridOrder(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcu.api.v1.UpdateBroadcastResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcu.api.v1.UpdateBroadcastResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcu.api.v1.UpdateBroadcastResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.UpdateBroadcastResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoomId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUpdateBroadcastLayout();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mcu.api.v1.UpdateBroadcastLayout.serializeBinaryToWriter
    );
  }
  f = message.getUpdateBroadcastPerformers();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.mcu.api.v1.UpdateBroadcastPerformers.serializeBinaryToWriter
    );
  }
  f = message.getUpdateMixerType();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.mcu.api.v1.UpdateMixerType.serializeBinaryToWriter
    );
  }
  f = message.getUpdateRoomGridOrder();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.mcu.api.v1.UpdateRoomGridOrder.serializeBinaryToWriter
    );
  }
};


/**
 * optional string room_id = 1;
 * @return {string}
 */
proto.mcu.api.v1.UpdateBroadcastResponse.prototype.getRoomId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mcu.api.v1.UpdateBroadcastResponse} returns this
 */
proto.mcu.api.v1.UpdateBroadcastResponse.prototype.setRoomId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional UpdateBroadcastLayout update_broadcast_layout = 2;
 * @return {?proto.mcu.api.v1.UpdateBroadcastLayout}
 */
proto.mcu.api.v1.UpdateBroadcastResponse.prototype.getUpdateBroadcastLayout = function() {
  return /** @type{?proto.mcu.api.v1.UpdateBroadcastLayout} */ (
    jspb.Message.getWrapperField(this, proto.mcu.api.v1.UpdateBroadcastLayout, 2));
};


/**
 * @param {?proto.mcu.api.v1.UpdateBroadcastLayout|undefined} value
 * @return {!proto.mcu.api.v1.UpdateBroadcastResponse} returns this
*/
proto.mcu.api.v1.UpdateBroadcastResponse.prototype.setUpdateBroadcastLayout = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mcu.api.v1.UpdateBroadcastResponse} returns this
 */
proto.mcu.api.v1.UpdateBroadcastResponse.prototype.clearUpdateBroadcastLayout = function() {
  return this.setUpdateBroadcastLayout(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mcu.api.v1.UpdateBroadcastResponse.prototype.hasUpdateBroadcastLayout = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional UpdateBroadcastPerformers update_broadcast_performers = 3;
 * @return {?proto.mcu.api.v1.UpdateBroadcastPerformers}
 */
proto.mcu.api.v1.UpdateBroadcastResponse.prototype.getUpdateBroadcastPerformers = function() {
  return /** @type{?proto.mcu.api.v1.UpdateBroadcastPerformers} */ (
    jspb.Message.getWrapperField(this, proto.mcu.api.v1.UpdateBroadcastPerformers, 3));
};


/**
 * @param {?proto.mcu.api.v1.UpdateBroadcastPerformers|undefined} value
 * @return {!proto.mcu.api.v1.UpdateBroadcastResponse} returns this
*/
proto.mcu.api.v1.UpdateBroadcastResponse.prototype.setUpdateBroadcastPerformers = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mcu.api.v1.UpdateBroadcastResponse} returns this
 */
proto.mcu.api.v1.UpdateBroadcastResponse.prototype.clearUpdateBroadcastPerformers = function() {
  return this.setUpdateBroadcastPerformers(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mcu.api.v1.UpdateBroadcastResponse.prototype.hasUpdateBroadcastPerformers = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional UpdateMixerType update_mixer_type = 4;
 * @return {?proto.mcu.api.v1.UpdateMixerType}
 */
proto.mcu.api.v1.UpdateBroadcastResponse.prototype.getUpdateMixerType = function() {
  return /** @type{?proto.mcu.api.v1.UpdateMixerType} */ (
    jspb.Message.getWrapperField(this, proto.mcu.api.v1.UpdateMixerType, 4));
};


/**
 * @param {?proto.mcu.api.v1.UpdateMixerType|undefined} value
 * @return {!proto.mcu.api.v1.UpdateBroadcastResponse} returns this
*/
proto.mcu.api.v1.UpdateBroadcastResponse.prototype.setUpdateMixerType = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mcu.api.v1.UpdateBroadcastResponse} returns this
 */
proto.mcu.api.v1.UpdateBroadcastResponse.prototype.clearUpdateMixerType = function() {
  return this.setUpdateMixerType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mcu.api.v1.UpdateBroadcastResponse.prototype.hasUpdateMixerType = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional UpdateRoomGridOrder update_room_grid_order = 5;
 * @return {?proto.mcu.api.v1.UpdateRoomGridOrder}
 */
proto.mcu.api.v1.UpdateBroadcastResponse.prototype.getUpdateRoomGridOrder = function() {
  return /** @type{?proto.mcu.api.v1.UpdateRoomGridOrder} */ (
    jspb.Message.getWrapperField(this, proto.mcu.api.v1.UpdateRoomGridOrder, 5));
};


/**
 * @param {?proto.mcu.api.v1.UpdateRoomGridOrder|undefined} value
 * @return {!proto.mcu.api.v1.UpdateBroadcastResponse} returns this
*/
proto.mcu.api.v1.UpdateBroadcastResponse.prototype.setUpdateRoomGridOrder = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mcu.api.v1.UpdateBroadcastResponse} returns this
 */
proto.mcu.api.v1.UpdateBroadcastResponse.prototype.clearUpdateRoomGridOrder = function() {
  return this.setUpdateRoomGridOrder(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mcu.api.v1.UpdateBroadcastResponse.prototype.hasUpdateRoomGridOrder = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mcu.api.v1.UpdateBroadcastPerformers.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcu.api.v1.UpdateBroadcastPerformers.prototype.toObject = function(opt_includeInstance) {
  return proto.mcu.api.v1.UpdateBroadcastPerformers.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcu.api.v1.UpdateBroadcastPerformers} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.UpdateBroadcastPerformers.toObject = function(includeInstance, msg) {
  var f, obj = {
    updatePerformersMap: (f = msg.getUpdatePerformersMap()) ? f.toObject(includeInstance, undefined) : [],
    deletePerformersList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    swapPerformersList: jspb.Message.toObjectList(msg.getSwapPerformersList(),
    proto.mcu.api.v1.UpdateBroadcastSwapPerformers.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcu.api.v1.UpdateBroadcastPerformers}
 */
proto.mcu.api.v1.UpdateBroadcastPerformers.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcu.api.v1.UpdateBroadcastPerformers;
  return proto.mcu.api.v1.UpdateBroadcastPerformers.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcu.api.v1.UpdateBroadcastPerformers} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcu.api.v1.UpdateBroadcastPerformers}
 */
proto.mcu.api.v1.UpdateBroadcastPerformers.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getUpdatePerformersMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readString, null, 0, "");
         });
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addDeletePerformers(value);
      break;
    case 3:
      var value = new proto.mcu.api.v1.UpdateBroadcastSwapPerformers;
      reader.readMessage(value,proto.mcu.api.v1.UpdateBroadcastSwapPerformers.deserializeBinaryFromReader);
      msg.addSwapPerformers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcu.api.v1.UpdateBroadcastPerformers.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcu.api.v1.UpdateBroadcastPerformers.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcu.api.v1.UpdateBroadcastPerformers} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.UpdateBroadcastPerformers.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUpdatePerformersMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getDeletePerformersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getSwapPerformersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.mcu.api.v1.UpdateBroadcastSwapPerformers.serializeBinaryToWriter
    );
  }
};


/**
 * map<int32, string> update_performers = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,string>}
 */
proto.mcu.api.v1.UpdateBroadcastPerformers.prototype.getUpdatePerformersMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,string>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.mcu.api.v1.UpdateBroadcastPerformers} returns this
 */
proto.mcu.api.v1.UpdateBroadcastPerformers.prototype.clearUpdatePerformersMap = function() {
  this.getUpdatePerformersMap().clear();
  return this;};


/**
 * repeated string delete_performers = 2;
 * @return {!Array<string>}
 */
proto.mcu.api.v1.UpdateBroadcastPerformers.prototype.getDeletePerformersList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.mcu.api.v1.UpdateBroadcastPerformers} returns this
 */
proto.mcu.api.v1.UpdateBroadcastPerformers.prototype.setDeletePerformersList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.mcu.api.v1.UpdateBroadcastPerformers} returns this
 */
proto.mcu.api.v1.UpdateBroadcastPerformers.prototype.addDeletePerformers = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mcu.api.v1.UpdateBroadcastPerformers} returns this
 */
proto.mcu.api.v1.UpdateBroadcastPerformers.prototype.clearDeletePerformersList = function() {
  return this.setDeletePerformersList([]);
};


/**
 * repeated UpdateBroadcastSwapPerformers swap_performers = 3;
 * @return {!Array<!proto.mcu.api.v1.UpdateBroadcastSwapPerformers>}
 */
proto.mcu.api.v1.UpdateBroadcastPerformers.prototype.getSwapPerformersList = function() {
  return /** @type{!Array<!proto.mcu.api.v1.UpdateBroadcastSwapPerformers>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mcu.api.v1.UpdateBroadcastSwapPerformers, 3));
};


/**
 * @param {!Array<!proto.mcu.api.v1.UpdateBroadcastSwapPerformers>} value
 * @return {!proto.mcu.api.v1.UpdateBroadcastPerformers} returns this
*/
proto.mcu.api.v1.UpdateBroadcastPerformers.prototype.setSwapPerformersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.mcu.api.v1.UpdateBroadcastSwapPerformers=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mcu.api.v1.UpdateBroadcastSwapPerformers}
 */
proto.mcu.api.v1.UpdateBroadcastPerformers.prototype.addSwapPerformers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.mcu.api.v1.UpdateBroadcastSwapPerformers, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mcu.api.v1.UpdateBroadcastPerformers} returns this
 */
proto.mcu.api.v1.UpdateBroadcastPerformers.prototype.clearSwapPerformersList = function() {
  return this.setSwapPerformersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcu.api.v1.UpdateBroadcastSwapPerformers.prototype.toObject = function(opt_includeInstance) {
  return proto.mcu.api.v1.UpdateBroadcastSwapPerformers.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcu.api.v1.UpdateBroadcastSwapPerformers} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.UpdateBroadcastSwapPerformers.toObject = function(includeInstance, msg) {
  var f, obj = {
    userA: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userB: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcu.api.v1.UpdateBroadcastSwapPerformers}
 */
proto.mcu.api.v1.UpdateBroadcastSwapPerformers.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcu.api.v1.UpdateBroadcastSwapPerformers;
  return proto.mcu.api.v1.UpdateBroadcastSwapPerformers.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcu.api.v1.UpdateBroadcastSwapPerformers} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcu.api.v1.UpdateBroadcastSwapPerformers}
 */
proto.mcu.api.v1.UpdateBroadcastSwapPerformers.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserA(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserB(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcu.api.v1.UpdateBroadcastSwapPerformers.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcu.api.v1.UpdateBroadcastSwapPerformers.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcu.api.v1.UpdateBroadcastSwapPerformers} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.UpdateBroadcastSwapPerformers.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserA();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserB();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string user_a = 1;
 * @return {string}
 */
proto.mcu.api.v1.UpdateBroadcastSwapPerformers.prototype.getUserA = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mcu.api.v1.UpdateBroadcastSwapPerformers} returns this
 */
proto.mcu.api.v1.UpdateBroadcastSwapPerformers.prototype.setUserA = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string user_b = 2;
 * @return {string}
 */
proto.mcu.api.v1.UpdateBroadcastSwapPerformers.prototype.getUserB = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.mcu.api.v1.UpdateBroadcastSwapPerformers} returns this
 */
proto.mcu.api.v1.UpdateBroadcastSwapPerformers.prototype.setUserB = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcu.api.v1.UpdateBroadcastLayout.prototype.toObject = function(opt_includeInstance) {
  return proto.mcu.api.v1.UpdateBroadcastLayout.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcu.api.v1.UpdateBroadcastLayout} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.UpdateBroadcastLayout.toObject = function(includeInstance, msg) {
  var f, obj = {
    layout: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcu.api.v1.UpdateBroadcastLayout}
 */
proto.mcu.api.v1.UpdateBroadcastLayout.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcu.api.v1.UpdateBroadcastLayout;
  return proto.mcu.api.v1.UpdateBroadcastLayout.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcu.api.v1.UpdateBroadcastLayout} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcu.api.v1.UpdateBroadcastLayout}
 */
proto.mcu.api.v1.UpdateBroadcastLayout.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.mcu.api.v1.BroadcastLayout} */ (reader.readEnum());
      msg.setLayout(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcu.api.v1.UpdateBroadcastLayout.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcu.api.v1.UpdateBroadcastLayout.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcu.api.v1.UpdateBroadcastLayout} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.UpdateBroadcastLayout.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLayout();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional BroadcastLayout layout = 1;
 * @return {!proto.mcu.api.v1.BroadcastLayout}
 */
proto.mcu.api.v1.UpdateBroadcastLayout.prototype.getLayout = function() {
  return /** @type {!proto.mcu.api.v1.BroadcastLayout} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.mcu.api.v1.BroadcastLayout} value
 * @return {!proto.mcu.api.v1.UpdateBroadcastLayout} returns this
 */
proto.mcu.api.v1.UpdateBroadcastLayout.prototype.setLayout = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcu.api.v1.GetStreamersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mcu.api.v1.GetStreamersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcu.api.v1.GetStreamersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.GetStreamersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    roomId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcu.api.v1.GetStreamersRequest}
 */
proto.mcu.api.v1.GetStreamersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcu.api.v1.GetStreamersRequest;
  return proto.mcu.api.v1.GetStreamersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcu.api.v1.GetStreamersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcu.api.v1.GetStreamersRequest}
 */
proto.mcu.api.v1.GetStreamersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoomId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcu.api.v1.GetStreamersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcu.api.v1.GetStreamersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcu.api.v1.GetStreamersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.GetStreamersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoomId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string room_id = 1;
 * @return {string}
 */
proto.mcu.api.v1.GetStreamersRequest.prototype.getRoomId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mcu.api.v1.GetStreamersRequest} returns this
 */
proto.mcu.api.v1.GetStreamersRequest.prototype.setRoomId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcu.api.v1.GetStreamersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mcu.api.v1.GetStreamersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcu.api.v1.GetStreamersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.GetStreamersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    roomId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    usersMap: (f = msg.getUsersMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcu.api.v1.GetStreamersResponse}
 */
proto.mcu.api.v1.GetStreamersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcu.api.v1.GetStreamersResponse;
  return proto.mcu.api.v1.GetStreamersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcu.api.v1.GetStreamersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcu.api.v1.GetStreamersResponse}
 */
proto.mcu.api.v1.GetStreamersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoomId(value);
      break;
    case 2:
      var value = msg.getUsersMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readString, null, 0, "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcu.api.v1.GetStreamersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcu.api.v1.GetStreamersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcu.api.v1.GetStreamersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.GetStreamersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoomId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUsersMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string room_id = 1;
 * @return {string}
 */
proto.mcu.api.v1.GetStreamersResponse.prototype.getRoomId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mcu.api.v1.GetStreamersResponse} returns this
 */
proto.mcu.api.v1.GetStreamersResponse.prototype.setRoomId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * map<int32, string> users = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,string>}
 */
proto.mcu.api.v1.GetStreamersResponse.prototype.getUsersMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,string>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.mcu.api.v1.GetStreamersResponse} returns this
 */
proto.mcu.api.v1.GetStreamersResponse.prototype.clearUsersMap = function() {
  this.getUsersMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcu.api.v1.GetStreamerRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mcu.api.v1.GetStreamerRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcu.api.v1.GetStreamerRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.GetStreamerRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    roomId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcu.api.v1.GetStreamerRequest}
 */
proto.mcu.api.v1.GetStreamerRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcu.api.v1.GetStreamerRequest;
  return proto.mcu.api.v1.GetStreamerRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcu.api.v1.GetStreamerRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcu.api.v1.GetStreamerRequest}
 */
proto.mcu.api.v1.GetStreamerRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoomId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcu.api.v1.GetStreamerRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcu.api.v1.GetStreamerRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcu.api.v1.GetStreamerRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.GetStreamerRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoomId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string room_id = 1;
 * @return {string}
 */
proto.mcu.api.v1.GetStreamerRequest.prototype.getRoomId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mcu.api.v1.GetStreamerRequest} returns this
 */
proto.mcu.api.v1.GetStreamerRequest.prototype.setRoomId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcu.api.v1.GetStreamerResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mcu.api.v1.GetStreamerResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcu.api.v1.GetStreamerResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.GetStreamerResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    roomId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcu.api.v1.GetStreamerResponse}
 */
proto.mcu.api.v1.GetStreamerResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcu.api.v1.GetStreamerResponse;
  return proto.mcu.api.v1.GetStreamerResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcu.api.v1.GetStreamerResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcu.api.v1.GetStreamerResponse}
 */
proto.mcu.api.v1.GetStreamerResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoomId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcu.api.v1.GetStreamerResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcu.api.v1.GetStreamerResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcu.api.v1.GetStreamerResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.GetStreamerResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoomId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string room_id = 1;
 * @return {string}
 */
proto.mcu.api.v1.GetStreamerResponse.prototype.getRoomId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mcu.api.v1.GetStreamerResponse} returns this
 */
proto.mcu.api.v1.GetStreamerResponse.prototype.setRoomId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string user_id = 2;
 * @return {string}
 */
proto.mcu.api.v1.GetStreamerResponse.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.mcu.api.v1.GetStreamerResponse} returns this
 */
proto.mcu.api.v1.GetStreamerResponse.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcu.api.v1.SetStreamerRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mcu.api.v1.SetStreamerRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcu.api.v1.SetStreamerRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.SetStreamerRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    roomId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    position: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcu.api.v1.SetStreamerRequest}
 */
proto.mcu.api.v1.SetStreamerRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcu.api.v1.SetStreamerRequest;
  return proto.mcu.api.v1.SetStreamerRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcu.api.v1.SetStreamerRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcu.api.v1.SetStreamerRequest}
 */
proto.mcu.api.v1.SetStreamerRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoomId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPosition(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcu.api.v1.SetStreamerRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcu.api.v1.SetStreamerRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcu.api.v1.SetStreamerRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.SetStreamerRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoomId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPosition();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional string room_id = 1;
 * @return {string}
 */
proto.mcu.api.v1.SetStreamerRequest.prototype.getRoomId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mcu.api.v1.SetStreamerRequest} returns this
 */
proto.mcu.api.v1.SetStreamerRequest.prototype.setRoomId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string user_id = 2;
 * @return {string}
 */
proto.mcu.api.v1.SetStreamerRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.mcu.api.v1.SetStreamerRequest} returns this
 */
proto.mcu.api.v1.SetStreamerRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 position = 3;
 * @return {number}
 */
proto.mcu.api.v1.SetStreamerRequest.prototype.getPosition = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.mcu.api.v1.SetStreamerRequest} returns this
 */
proto.mcu.api.v1.SetStreamerRequest.prototype.setPosition = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcu.api.v1.SetStreamerResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mcu.api.v1.SetStreamerResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcu.api.v1.SetStreamerResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.SetStreamerResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    roomId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcu.api.v1.SetStreamerResponse}
 */
proto.mcu.api.v1.SetStreamerResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcu.api.v1.SetStreamerResponse;
  return proto.mcu.api.v1.SetStreamerResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcu.api.v1.SetStreamerResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcu.api.v1.SetStreamerResponse}
 */
proto.mcu.api.v1.SetStreamerResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoomId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcu.api.v1.SetStreamerResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcu.api.v1.SetStreamerResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcu.api.v1.SetStreamerResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.SetStreamerResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoomId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string room_id = 1;
 * @return {string}
 */
proto.mcu.api.v1.SetStreamerResponse.prototype.getRoomId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mcu.api.v1.SetStreamerResponse} returns this
 */
proto.mcu.api.v1.SetStreamerResponse.prototype.setRoomId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string user_id = 2;
 * @return {string}
 */
proto.mcu.api.v1.SetStreamerResponse.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.mcu.api.v1.SetStreamerResponse} returns this
 */
proto.mcu.api.v1.SetStreamerResponse.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcu.api.v1.StartStreamingRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mcu.api.v1.StartStreamingRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcu.api.v1.StartStreamingRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.StartStreamingRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    roomId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    eventId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    layout: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcu.api.v1.StartStreamingRequest}
 */
proto.mcu.api.v1.StartStreamingRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcu.api.v1.StartStreamingRequest;
  return proto.mcu.api.v1.StartStreamingRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcu.api.v1.StartStreamingRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcu.api.v1.StartStreamingRequest}
 */
proto.mcu.api.v1.StartStreamingRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoomId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventId(value);
      break;
    case 3:
      var value = /** @type {!proto.mcu.api.v1.BroadcastLayout} */ (reader.readEnum());
      msg.setLayout(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcu.api.v1.StartStreamingRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcu.api.v1.StartStreamingRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcu.api.v1.StartStreamingRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.StartStreamingRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoomId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEventId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLayout();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional string room_id = 1;
 * @return {string}
 */
proto.mcu.api.v1.StartStreamingRequest.prototype.getRoomId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mcu.api.v1.StartStreamingRequest} returns this
 */
proto.mcu.api.v1.StartStreamingRequest.prototype.setRoomId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string event_id = 2;
 * @return {string}
 */
proto.mcu.api.v1.StartStreamingRequest.prototype.getEventId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.mcu.api.v1.StartStreamingRequest} returns this
 */
proto.mcu.api.v1.StartStreamingRequest.prototype.setEventId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional BroadcastLayout layout = 3;
 * @return {!proto.mcu.api.v1.BroadcastLayout}
 */
proto.mcu.api.v1.StartStreamingRequest.prototype.getLayout = function() {
  return /** @type {!proto.mcu.api.v1.BroadcastLayout} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.mcu.api.v1.BroadcastLayout} value
 * @return {!proto.mcu.api.v1.StartStreamingRequest} returns this
 */
proto.mcu.api.v1.StartStreamingRequest.prototype.setLayout = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcu.api.v1.StartStreamingResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mcu.api.v1.StartStreamingResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcu.api.v1.StartStreamingResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.StartStreamingResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    roomId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcu.api.v1.StartStreamingResponse}
 */
proto.mcu.api.v1.StartStreamingResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcu.api.v1.StartStreamingResponse;
  return proto.mcu.api.v1.StartStreamingResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcu.api.v1.StartStreamingResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcu.api.v1.StartStreamingResponse}
 */
proto.mcu.api.v1.StartStreamingResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoomId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcu.api.v1.StartStreamingResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcu.api.v1.StartStreamingResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcu.api.v1.StartStreamingResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.StartStreamingResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoomId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string room_id = 1;
 * @return {string}
 */
proto.mcu.api.v1.StartStreamingResponse.prototype.getRoomId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mcu.api.v1.StartStreamingResponse} returns this
 */
proto.mcu.api.v1.StartStreamingResponse.prototype.setRoomId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcu.api.v1.StopStreamingRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mcu.api.v1.StopStreamingRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcu.api.v1.StopStreamingRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.StopStreamingRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    roomId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcu.api.v1.StopStreamingRequest}
 */
proto.mcu.api.v1.StopStreamingRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcu.api.v1.StopStreamingRequest;
  return proto.mcu.api.v1.StopStreamingRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcu.api.v1.StopStreamingRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcu.api.v1.StopStreamingRequest}
 */
proto.mcu.api.v1.StopStreamingRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoomId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcu.api.v1.StopStreamingRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcu.api.v1.StopStreamingRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcu.api.v1.StopStreamingRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.StopStreamingRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoomId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string room_id = 1;
 * @return {string}
 */
proto.mcu.api.v1.StopStreamingRequest.prototype.getRoomId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mcu.api.v1.StopStreamingRequest} returns this
 */
proto.mcu.api.v1.StopStreamingRequest.prototype.setRoomId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcu.api.v1.StopStreamingResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mcu.api.v1.StopStreamingResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcu.api.v1.StopStreamingResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.StopStreamingResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    roomId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcu.api.v1.StopStreamingResponse}
 */
proto.mcu.api.v1.StopStreamingResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcu.api.v1.StopStreamingResponse;
  return proto.mcu.api.v1.StopStreamingResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcu.api.v1.StopStreamingResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcu.api.v1.StopStreamingResponse}
 */
proto.mcu.api.v1.StopStreamingResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoomId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcu.api.v1.StopStreamingResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcu.api.v1.StopStreamingResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcu.api.v1.StopStreamingResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.StopStreamingResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoomId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string room_id = 1;
 * @return {string}
 */
proto.mcu.api.v1.StopStreamingResponse.prototype.getRoomId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mcu.api.v1.StopStreamingResponse} returns this
 */
proto.mcu.api.v1.StopStreamingResponse.prototype.setRoomId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcu.api.v1.AddRoomRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mcu.api.v1.AddRoomRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcu.api.v1.AddRoomRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.AddRoomRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    roomId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcu.api.v1.AddRoomRequest}
 */
proto.mcu.api.v1.AddRoomRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcu.api.v1.AddRoomRequest;
  return proto.mcu.api.v1.AddRoomRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcu.api.v1.AddRoomRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcu.api.v1.AddRoomRequest}
 */
proto.mcu.api.v1.AddRoomRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoomId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcu.api.v1.AddRoomRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcu.api.v1.AddRoomRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcu.api.v1.AddRoomRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.AddRoomRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoomId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string room_id = 1;
 * @return {string}
 */
proto.mcu.api.v1.AddRoomRequest.prototype.getRoomId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mcu.api.v1.AddRoomRequest} returns this
 */
proto.mcu.api.v1.AddRoomRequest.prototype.setRoomId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcu.api.v1.AddRoomResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mcu.api.v1.AddRoomResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcu.api.v1.AddRoomResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.AddRoomResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    roomId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcu.api.v1.AddRoomResponse}
 */
proto.mcu.api.v1.AddRoomResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcu.api.v1.AddRoomResponse;
  return proto.mcu.api.v1.AddRoomResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcu.api.v1.AddRoomResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcu.api.v1.AddRoomResponse}
 */
proto.mcu.api.v1.AddRoomResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoomId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcu.api.v1.AddRoomResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcu.api.v1.AddRoomResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcu.api.v1.AddRoomResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.AddRoomResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoomId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string room_id = 1;
 * @return {string}
 */
proto.mcu.api.v1.AddRoomResponse.prototype.getRoomId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mcu.api.v1.AddRoomResponse} returns this
 */
proto.mcu.api.v1.AddRoomResponse.prototype.setRoomId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcu.api.v1.RemoveRoomRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mcu.api.v1.RemoveRoomRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcu.api.v1.RemoveRoomRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.RemoveRoomRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    roomId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcu.api.v1.RemoveRoomRequest}
 */
proto.mcu.api.v1.RemoveRoomRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcu.api.v1.RemoveRoomRequest;
  return proto.mcu.api.v1.RemoveRoomRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcu.api.v1.RemoveRoomRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcu.api.v1.RemoveRoomRequest}
 */
proto.mcu.api.v1.RemoveRoomRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoomId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcu.api.v1.RemoveRoomRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcu.api.v1.RemoveRoomRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcu.api.v1.RemoveRoomRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.RemoveRoomRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoomId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string room_id = 1;
 * @return {string}
 */
proto.mcu.api.v1.RemoveRoomRequest.prototype.getRoomId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mcu.api.v1.RemoveRoomRequest} returns this
 */
proto.mcu.api.v1.RemoveRoomRequest.prototype.setRoomId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcu.api.v1.RemoveRoomResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mcu.api.v1.RemoveRoomResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcu.api.v1.RemoveRoomResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.RemoveRoomResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    roomId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcu.api.v1.RemoveRoomResponse}
 */
proto.mcu.api.v1.RemoveRoomResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcu.api.v1.RemoveRoomResponse;
  return proto.mcu.api.v1.RemoveRoomResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcu.api.v1.RemoveRoomResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcu.api.v1.RemoveRoomResponse}
 */
proto.mcu.api.v1.RemoveRoomResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoomId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcu.api.v1.RemoveRoomResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcu.api.v1.RemoveRoomResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcu.api.v1.RemoveRoomResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.RemoveRoomResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoomId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string room_id = 1;
 * @return {string}
 */
proto.mcu.api.v1.RemoveRoomResponse.prototype.getRoomId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mcu.api.v1.RemoveRoomResponse} returns this
 */
proto.mcu.api.v1.RemoveRoomResponse.prototype.setRoomId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcu.api.v1.OutputStreamRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mcu.api.v1.OutputStreamRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcu.api.v1.OutputStreamRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.OutputStreamRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    roomId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sfuId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    controlOnly: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcu.api.v1.OutputStreamRequest}
 */
proto.mcu.api.v1.OutputStreamRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcu.api.v1.OutputStreamRequest;
  return proto.mcu.api.v1.OutputStreamRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcu.api.v1.OutputStreamRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcu.api.v1.OutputStreamRequest}
 */
proto.mcu.api.v1.OutputStreamRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoomId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSfuId(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setControlOnly(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcu.api.v1.OutputStreamRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcu.api.v1.OutputStreamRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcu.api.v1.OutputStreamRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcu.api.v1.OutputStreamRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoomId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSfuId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getControlOnly();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string room_id = 1;
 * @return {string}
 */
proto.mcu.api.v1.OutputStreamRequest.prototype.getRoomId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mcu.api.v1.OutputStreamRequest} returns this
 */
proto.mcu.api.v1.OutputStreamRequest.prototype.setRoomId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string sfu_id = 2;
 * @return {string}
 */
proto.mcu.api.v1.OutputStreamRequest.prototype.getSfuId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.mcu.api.v1.OutputStreamRequest} returns this
 */
proto.mcu.api.v1.OutputStreamRequest.prototype.setSfuId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool control_only = 3;
 * @return {boolean}
 */
proto.mcu.api.v1.OutputStreamRequest.prototype.getControlOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.mcu.api.v1.OutputStreamRequest} returns this
 */
proto.mcu.api.v1.OutputStreamRequest.prototype.setControlOnly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


goog.object.extend(exports, proto.mcu.api.v1);

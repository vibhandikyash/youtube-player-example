/* eslint-disable */
// source: wsserver/models.private.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.wsserver.api.v1.AuthenticationToken', null, global);
goog.exportSymbol('proto.wsserver.api.v1.AuthenticationToken.TypeCase', null, global);
goog.exportSymbol('proto.wsserver.api.v1.RoomUserToken', null, global);
goog.exportSymbol('proto.wsserver.api.v1.SessionToken', null, global);
goog.exportSymbol('proto.wsserver.api.v1.UserToken', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wsserver.api.v1.UserToken = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wsserver.api.v1.UserToken, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wsserver.api.v1.UserToken.displayName = 'proto.wsserver.api.v1.UserToken';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wsserver.api.v1.SessionToken = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wsserver.api.v1.SessionToken, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wsserver.api.v1.SessionToken.displayName = 'proto.wsserver.api.v1.SessionToken';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wsserver.api.v1.RoomUserToken = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wsserver.api.v1.RoomUserToken, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wsserver.api.v1.RoomUserToken.displayName = 'proto.wsserver.api.v1.RoomUserToken';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wsserver.api.v1.AuthenticationToken = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.wsserver.api.v1.AuthenticationToken.oneofGroups_);
};
goog.inherits(proto.wsserver.api.v1.AuthenticationToken, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wsserver.api.v1.AuthenticationToken.displayName = 'proto.wsserver.api.v1.AuthenticationToken';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wsserver.api.v1.UserToken.prototype.toObject = function(opt_includeInstance) {
  return proto.wsserver.api.v1.UserToken.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wsserver.api.v1.UserToken} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wsserver.api.v1.UserToken.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    role: jspb.Message.getFieldWithDefault(msg, 3, 0),
    region: jspb.Message.getFieldWithDefault(msg, 4, ""),
    avatar: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wsserver.api.v1.UserToken}
 */
proto.wsserver.api.v1.UserToken.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wsserver.api.v1.UserToken;
  return proto.wsserver.api.v1.UserToken.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wsserver.api.v1.UserToken} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wsserver.api.v1.UserToken}
 */
proto.wsserver.api.v1.UserToken.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRole(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegion(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAvatar(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wsserver.api.v1.UserToken.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wsserver.api.v1.UserToken.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wsserver.api.v1.UserToken} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wsserver.api.v1.UserToken.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRole();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getRegion();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAvatar();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.wsserver.api.v1.UserToken.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.wsserver.api.v1.UserToken} returns this
 */
proto.wsserver.api.v1.UserToken.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.wsserver.api.v1.UserToken.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.wsserver.api.v1.UserToken} returns this
 */
proto.wsserver.api.v1.UserToken.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 role = 3;
 * @return {number}
 */
proto.wsserver.api.v1.UserToken.prototype.getRole = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.wsserver.api.v1.UserToken} returns this
 */
proto.wsserver.api.v1.UserToken.prototype.setRole = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string region = 4;
 * @return {string}
 */
proto.wsserver.api.v1.UserToken.prototype.getRegion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.wsserver.api.v1.UserToken} returns this
 */
proto.wsserver.api.v1.UserToken.prototype.setRegion = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string avatar = 5;
 * @return {string}
 */
proto.wsserver.api.v1.UserToken.prototype.getAvatar = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.wsserver.api.v1.UserToken} returns this
 */
proto.wsserver.api.v1.UserToken.prototype.setAvatar = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wsserver.api.v1.SessionToken.prototype.toObject = function(opt_includeInstance) {
  return proto.wsserver.api.v1.SessionToken.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wsserver.api.v1.SessionToken} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wsserver.api.v1.SessionToken.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wsserver.api.v1.SessionToken}
 */
proto.wsserver.api.v1.SessionToken.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wsserver.api.v1.SessionToken;
  return proto.wsserver.api.v1.SessionToken.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wsserver.api.v1.SessionToken} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wsserver.api.v1.SessionToken}
 */
proto.wsserver.api.v1.SessionToken.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wsserver.api.v1.SessionToken.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wsserver.api.v1.SessionToken.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wsserver.api.v1.SessionToken} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wsserver.api.v1.SessionToken.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.wsserver.api.v1.SessionToken.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.wsserver.api.v1.SessionToken} returns this
 */
proto.wsserver.api.v1.SessionToken.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string user_id = 2;
 * @return {string}
 */
proto.wsserver.api.v1.SessionToken.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.wsserver.api.v1.SessionToken} returns this
 */
proto.wsserver.api.v1.SessionToken.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wsserver.api.v1.RoomUserToken.prototype.toObject = function(opt_includeInstance) {
  return proto.wsserver.api.v1.RoomUserToken.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wsserver.api.v1.RoomUserToken} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wsserver.api.v1.RoomUserToken.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    roomId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    role: jspb.Message.getFieldWithDefault(msg, 4, 0),
    region: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wsserver.api.v1.RoomUserToken}
 */
proto.wsserver.api.v1.RoomUserToken.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wsserver.api.v1.RoomUserToken;
  return proto.wsserver.api.v1.RoomUserToken.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wsserver.api.v1.RoomUserToken} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wsserver.api.v1.RoomUserToken}
 */
proto.wsserver.api.v1.RoomUserToken.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoomId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRole(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wsserver.api.v1.RoomUserToken.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wsserver.api.v1.RoomUserToken.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wsserver.api.v1.RoomUserToken} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wsserver.api.v1.RoomUserToken.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRoomId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRole();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getRegion();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.wsserver.api.v1.RoomUserToken.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.wsserver.api.v1.RoomUserToken} returns this
 */
proto.wsserver.api.v1.RoomUserToken.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string room_id = 2;
 * @return {string}
 */
proto.wsserver.api.v1.RoomUserToken.prototype.getRoomId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.wsserver.api.v1.RoomUserToken} returns this
 */
proto.wsserver.api.v1.RoomUserToken.prototype.setRoomId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string user_id = 3;
 * @return {string}
 */
proto.wsserver.api.v1.RoomUserToken.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.wsserver.api.v1.RoomUserToken} returns this
 */
proto.wsserver.api.v1.RoomUserToken.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 role = 4;
 * @return {number}
 */
proto.wsserver.api.v1.RoomUserToken.prototype.getRole = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.wsserver.api.v1.RoomUserToken} returns this
 */
proto.wsserver.api.v1.RoomUserToken.prototype.setRole = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string region = 5;
 * @return {string}
 */
proto.wsserver.api.v1.RoomUserToken.prototype.getRegion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.wsserver.api.v1.RoomUserToken} returns this
 */
proto.wsserver.api.v1.RoomUserToken.prototype.setRegion = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.wsserver.api.v1.AuthenticationToken.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.wsserver.api.v1.AuthenticationToken.TypeCase = {
  TYPE_NOT_SET: 0,
  USER: 1,
  SESSION: 2,
  ROOM_USER: 3
};

/**
 * @return {proto.wsserver.api.v1.AuthenticationToken.TypeCase}
 */
proto.wsserver.api.v1.AuthenticationToken.prototype.getTypeCase = function() {
  return /** @type {proto.wsserver.api.v1.AuthenticationToken.TypeCase} */(jspb.Message.computeOneofCase(this, proto.wsserver.api.v1.AuthenticationToken.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wsserver.api.v1.AuthenticationToken.prototype.toObject = function(opt_includeInstance) {
  return proto.wsserver.api.v1.AuthenticationToken.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wsserver.api.v1.AuthenticationToken} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wsserver.api.v1.AuthenticationToken.toObject = function(includeInstance, msg) {
  var f, obj = {
    user: (f = msg.getUser()) && proto.wsserver.api.v1.UserToken.toObject(includeInstance, f),
    session: (f = msg.getSession()) && proto.wsserver.api.v1.SessionToken.toObject(includeInstance, f),
    roomUser: (f = msg.getRoomUser()) && proto.wsserver.api.v1.RoomUserToken.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wsserver.api.v1.AuthenticationToken}
 */
proto.wsserver.api.v1.AuthenticationToken.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wsserver.api.v1.AuthenticationToken;
  return proto.wsserver.api.v1.AuthenticationToken.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wsserver.api.v1.AuthenticationToken} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wsserver.api.v1.AuthenticationToken}
 */
proto.wsserver.api.v1.AuthenticationToken.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.wsserver.api.v1.UserToken;
      reader.readMessage(value,proto.wsserver.api.v1.UserToken.deserializeBinaryFromReader);
      msg.setUser(value);
      break;
    case 2:
      var value = new proto.wsserver.api.v1.SessionToken;
      reader.readMessage(value,proto.wsserver.api.v1.SessionToken.deserializeBinaryFromReader);
      msg.setSession(value);
      break;
    case 3:
      var value = new proto.wsserver.api.v1.RoomUserToken;
      reader.readMessage(value,proto.wsserver.api.v1.RoomUserToken.deserializeBinaryFromReader);
      msg.setRoomUser(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wsserver.api.v1.AuthenticationToken.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wsserver.api.v1.AuthenticationToken.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wsserver.api.v1.AuthenticationToken} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wsserver.api.v1.AuthenticationToken.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUser();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.wsserver.api.v1.UserToken.serializeBinaryToWriter
    );
  }
  f = message.getSession();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.wsserver.api.v1.SessionToken.serializeBinaryToWriter
    );
  }
  f = message.getRoomUser();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.wsserver.api.v1.RoomUserToken.serializeBinaryToWriter
    );
  }
};


/**
 * optional UserToken user = 1;
 * @return {?proto.wsserver.api.v1.UserToken}
 */
proto.wsserver.api.v1.AuthenticationToken.prototype.getUser = function() {
  return /** @type{?proto.wsserver.api.v1.UserToken} */ (
    jspb.Message.getWrapperField(this, proto.wsserver.api.v1.UserToken, 1));
};


/**
 * @param {?proto.wsserver.api.v1.UserToken|undefined} value
 * @return {!proto.wsserver.api.v1.AuthenticationToken} returns this
*/
proto.wsserver.api.v1.AuthenticationToken.prototype.setUser = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.wsserver.api.v1.AuthenticationToken.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wsserver.api.v1.AuthenticationToken} returns this
 */
proto.wsserver.api.v1.AuthenticationToken.prototype.clearUser = function() {
  return this.setUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wsserver.api.v1.AuthenticationToken.prototype.hasUser = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional SessionToken session = 2;
 * @return {?proto.wsserver.api.v1.SessionToken}
 */
proto.wsserver.api.v1.AuthenticationToken.prototype.getSession = function() {
  return /** @type{?proto.wsserver.api.v1.SessionToken} */ (
    jspb.Message.getWrapperField(this, proto.wsserver.api.v1.SessionToken, 2));
};


/**
 * @param {?proto.wsserver.api.v1.SessionToken|undefined} value
 * @return {!proto.wsserver.api.v1.AuthenticationToken} returns this
*/
proto.wsserver.api.v1.AuthenticationToken.prototype.setSession = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.wsserver.api.v1.AuthenticationToken.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wsserver.api.v1.AuthenticationToken} returns this
 */
proto.wsserver.api.v1.AuthenticationToken.prototype.clearSession = function() {
  return this.setSession(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wsserver.api.v1.AuthenticationToken.prototype.hasSession = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional RoomUserToken room_user = 3;
 * @return {?proto.wsserver.api.v1.RoomUserToken}
 */
proto.wsserver.api.v1.AuthenticationToken.prototype.getRoomUser = function() {
  return /** @type{?proto.wsserver.api.v1.RoomUserToken} */ (
    jspb.Message.getWrapperField(this, proto.wsserver.api.v1.RoomUserToken, 3));
};


/**
 * @param {?proto.wsserver.api.v1.RoomUserToken|undefined} value
 * @return {!proto.wsserver.api.v1.AuthenticationToken} returns this
*/
proto.wsserver.api.v1.AuthenticationToken.prototype.setRoomUser = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.wsserver.api.v1.AuthenticationToken.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wsserver.api.v1.AuthenticationToken} returns this
 */
proto.wsserver.api.v1.AuthenticationToken.prototype.clearRoomUser = function() {
  return this.setRoomUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wsserver.api.v1.AuthenticationToken.prototype.hasRoomUser = function() {
  return jspb.Message.getField(this, 3) != null;
};


goog.object.extend(exports, proto.wsserver.api.v1);
